Платформа Veda.

REST <---> Tarantool exchange protocol
Пакеты запросов к Tarantool имеют общий вид и состоят из трех элементов:
1. 4 байта — размер msgpack.
3. Msgpack соответствующего размера с информацией.

Первые два элемента msgpack для любого запроса —  тип операции op_id,
флаг need_auth, отображающий необходимость авторизации, user_id, равный
строке с именем пользователя, далее идут данные запроса.

Для операции PUT msgpack содержит последовательность индивидов для записи
(create, update): [op_id, need_auth, user_id, individual_1, ..., individual_n].
Индивид представлен массивом msgpack состоящим из двух элементов: строка uri и
ассоциативный массив (map). Ассоциативный массив состоит из пар строка-массив.
Строка является ключом (uri ресурса), в массиве хранятся значения. Каждый индивид
обязательно содержит uri, обёрточный индивид для запроса put обязательно содержит два
ресурса: prev_state и new_state.

Ответ на запрос PUT представляется размером сообщения (4 байта) и
masgpack'ом из массива, который содержит общий код выполнения операции
и коды результатов операции вставки: [general_code, code_1, ..., code_n].
В случае если общий код не является кодом успеха (200), то msgpack состоит
только из него: [general_code].

Для операции GET msgpack содержит последовательность uri индивидов для чтения:
[op_id, need_auth, user_id, uri_1, ..., uri_n].

Ответ на запрос GET представляется размером сообщения (4 байта) и
masgpack'ом из массива, который содержит общий код выполнения операции,
далее идет последовательность кодов результатов для чтения, если код чтения
соответствует успеху (200), то после кода идет msgpack индивида, если код
соответствует провалу (XXX), то после него идёт nil:
[general_code, success_code_1, msgpack_1, fail_code_2, nil, success_code_3, ....].
В случае если общий код не является кодом успеха (200), то msgpack состоит
только из него: [general_code].

Для операции REMOVE msgpack содержит последовательность uri для удаления:
[op_id, need_auth, user_id, uri_1, ..., uri_n].

Ответ на запрос DELETE представляется размером сообщения (4 байта) и
masgpack'ом из массива, который содержит общий код выполнения операции
и коды результатов операции удаления: [general_code, code_1, ..., code_n].
В случае если общий код не является кодом успеха (200), то msgpack состоит
только из него: [general_code].

Для операций AUTHORIZE, GET_RIGHTS_ORIGIN, GET_MEMBERSHIP msgpack содержит последовательность 
uri для проверки прав доступа:
[op_id, need_auth, trace, user_id, uri_1, ..., uri_n]. Поле need_auth может быть
заполнено true или false, во время исполнения оно игнорируется, оно необходимо
для сохранения единообразия запросов. Поле trace заполняется true или false, trace
заставляет функцию авторизации собирать данные о процессе авторизации в отдельную строку,
trace работает только для функций с аггрегацией данных GET_RIGHTS_ORIGIN и GET_MEMBERSHIP.

Ответ на запросы AUTHORIZE, GET_RIGHTS_ORIGIN, GET_MEMBERSHIP представляется размером 
сообщения (4 байта) и masgpack'ом из массива, который содержит общий код выполнения операции,
далее идет кода результата для авторизации, если код авторизации
соответствует успеху (200), то после кода идет байт прав, если код
соответствует провалу (XXX), то после него идёт 0, после байта прав следует data,
для запроса AUTHORIZE data всегда nil, для запросов GET_RIGHTS_ORIGIN и GET_MEMBERSHIP 
в data  содержится информация о процессе авторизации, строка в случае успеха и nil в случае провала:
[general_code, success_code_1, rights_1, data_1, fail_code_2, 0, data_2, success_code_3, ....].
В случае если общий код не является кодом успеха (200), то msgpack состоит
только из него: [general_code].


Поисковые возможности платформы Veda. VQL.

VEDA FULL TEXT SEARCH QUERY LANGUAGE - VQL

в общем виде запросы строятся так:

('ПРЕДИКАТ1' == 'ЧТО ИЩЕМ1' && 'ПРЕДИКАТ2' == 'ЧТО ИЩЕМ2') || ('ПРЕДИКАТ3' == 'ЧТО ИЩЕМ3')

== означает поиск с учетом иерархии классов

=== более строгий чем == поиск, то есть ищет только тот класс который указан

с правой стороны выражения в '' кавычках может быть выражение с таким синтаксисом https://xapian.org/docs/queryparser.html

с левой стороны выражения вместо 'ПРЕДИКАТ' может быть '*' это значит надо искать в любом поле

с правой стороны может быть такое выражение 'ИЩЕМ*', это значит не определено окончание и будут использованы все словоформы но не более 20 000 вариантов этого слова

еще есть вложенные поля:  'ПРЕДИКАТ1.ПРЕДИКАТ2'

есть предопределенное поле ПРЕДИКАТ1.isExists, по нему можно узнать есть ли хоть что то в поле

поиск по диапазонам [ЗНАЧЕНИЕ1, ЗНАЧЕНИЕ2], пример:
( ( 'rdf:type'==='mnd-s:Idea' ) && ( 'v-s:created'==[2017-05-31T21:00:00.000Z,2017-06-30T20:59:59.999Z] ) )

косвенно можно указать в какой базе искать: сейчас поток индексация делится на три части: basic, system и deleted
например чтоб поискать в удаленных, нужно явно указать что поле 'v-s:deleted' === true

есть возможность указать номер слота в запросе вместо предиката, пример: '#123' == 'текст'

пробовать запросы можно здесь: http://127.0.0.1/#/search

по умолчанию весь поиск происходит по базе basic
схема индексации находится здесь: veda-index.ttl

есть сортировки по набору полей, и указания сколько нужно будет выбрать индивидов (TOP), сколько всего просматривать в запросе (LIMIT), и сколько отступить при выборке TOP, (FROM)

протестировать запросы можно в запущенном приложении: http://127.0.0.1/#/search

ПРИМЕРЫ:

'*' == 'лесовик' - поиск документов содержащих слова [лесовик] по любому полю любых документов
'*' == 'лес*'- поиск документов содержащих слова начинающихся на [лес] по любому полю любых документов
'*' == 'лес*' && '*' == 'вод*' - поиск документов содержащих слова начинающихся на [лес] И начинающихся на [вод] по любым полям любых документов
'*' == 'лес*' || '*' == 'вод*' - поиск документов содержащих слова начинающихся на [лес] ИЛИ начинающихся на [вод] по любым полям любых документов
'*' == 'лес*' && ('*' == 'вод*' || '*' == 'мотор*')
'rdfs:label' == 'лес*' - поиск документов содержащих слова начинающихся на [лес] по полю rdfs:label
'v-s:owner.isExists' == 'true' - поиск документов содержащих поле v-s:owner с любым содержимым
'rdf:type'=='v-s:Organization' - находим документы с типом v-s:Organization и c типом Филиал
'rdf:type'==='v-s:Organization'- находим только документы с типом v-s:Organization
'rdf:type'==='mnd-s:Idea'  &&  'v-s:created'==[2017-05-31T21:00:00.000Z,2017-06-30T20:59:59.999Z] - документы типа mnd-s:Idea с датой создания в диапазоне от 2017-05-31T21:00:00.000Z до 2017-06-30T20:59:59.999Z
'rdf:type'==='mnd-s:Idea'  && 'v-s:deleted' === true - документы типа mnd-s:Idea которые были удалены
'rdf:type'==='v-wf:Process' - документы типа v-wf:Process, однако найти такие можно только указав явно тип v-wf:Process
'*' == '+лес +вод' - документы содержащие слова [лес] + [вод] вместе в любых полях
'*' == '(№177 177а, 2017-06-28)' - документы содержащие фрагменты токенов №177 177а, 2017-06-28 в любых полях
'*' == '"(№177 177а, 2017-06-28)"' - документы содержащий точную фразу [(№177 177а, 2017-06-28)] в любых полях
'@' === 'v-s:Organization' находим документы с id = v-s:Organization


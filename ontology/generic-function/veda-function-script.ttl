@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
@prefix v-wf: <http://semantic-machines.com/veda/veda-workflow/> .

<http://semantic-machines.com/veda/veda-function-script>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология  скриптов системы Veda"@ru ;
  rdfs:label "Veda system scripts ontology"@en ;
#  owl:versionInfo "1.3" ;
  v-s:loadPriority 7 ;
.

# --------------------------User scripts--------------------------------

v-s:UserScript
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:UserThing ;
  rdfs:label "Пользовательский скрипт"@ru ;
  rdfs:label "User script"@en ;
  v-ui:hasTemplate v-s:UserScriptTemplate ;
.

v-s:output
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Вывод"@ru ;
  rdfs:label "Output"@en ;
  rdfs:domain v-s:UserScript ;
  rdfs:range xsd:string ;
.

v-s:toBeRun
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Выполнить"@ru ;
  rdfs:label "To be run"@en ;
  rdfs:domain v-s:UserScript ;
  rdfs:range xsd:boolean ;
.

v-s:lastRun
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Последний запуск"@ru ;
  rdfs:label "Last run"@en ;
  rdfs:domain v-s:UserScript ;
  rdfs:range xsd:dateTime ;
.

v-s:PsRunAtUserScript
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация свойства v-s:runAt для класса v-s:UserScript"@ru ;
  rdfs:label "v-s:runAt property specification for v-s:UserScript class"@en ;
  v-ui:forClass v-s:UserScript ;
  v-ui:forProperty v-s:runAt ;
  v-ui:minCardinality 1 ;
  v-ui:maxCardinality 1 ;
  v-ui:defaultValue "Browser" ;
  v-ui:optionValue "Browser" ;
  v-ui:optionValue "Server" ;
.

v-s:UserScriptEvent
  rdf:type v-s:Event ;
  v-s:triggerByType v-s:UserScript ;
#  v-s:runAt "V8.LowPriority" ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = previous state of the captured document
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 * parent_script_id = id of the parent script that triggered this event.
 * parent_document_id = id of the document that triggered this event.
 * super_classes = super classes of the document.
 */
var toBeRun = document["v-s:toBeRun"] && document["v-s:toBeRun"][0] && document["v-s:toBeRun"][0].data ;
var runAt = document["v-s:runAt"] && document["v-s:runAt"][0] && document["v-s:runAt"][0].data ;

if (!toBeRun || runAt !== "Server") { return; }

// preserve global print & console
var nativePrint = this.print;
var nativeConsole = this.console;

// override global print & console
var print = function () {
  for (var i = 0; i < arguments.length; i++) {
    var arg = arguments[i] ;
    var argString = typeof arg !== "undefined" ? arg.toString() : "undefined" ;
    if (i === 0) {
      output += argString;
    } else {
      output += " " + argString;
    }
  }
  output += String.fromCharCode(13, 10);
}
this.print = print;

var console = {
  log: print,
  error: print,
  info: print,
  time: function (timer) {
    this[timer] = new Date();
  },
  timeEnd: function (timer) {
    var delta = new Date() - this[timer];
    this.log(timer, delta, "msec");
  }
};
this.console = console;

var output = "";
var script = document["v-s:script"] && document["v-s:script"][0] && document["v-s:script"][0].data;
if (script) {
  script = new Function (script);
  try {
    script();
  } catch (err) {
    print(err, err.stack);
  }
  document["v-s:output"] = [{
    data: output,
    lang: "NONE",
    type: "String"
  }];
  document["v-s:lastRun"] = [{
    data: new Date(),
    type: "Datetime"
  }];
  delete document["v-s:toBeRun"];
  put_individual(ticket, document, _event_id);
}

// restore global print & console
this.print = nativePrint;
this.console = nativeConsole;
"""
.

v-s:RunBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Запустить"@ru ;
  rdfs:label "Run"@en ;
.
v-s:ClearBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Очистить"@ru ;
  rdfs:label "Clear"@en ;
.

v-s:UserScriptTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-s:UserScript ;
  rdfs:label "Шаблон для класса v-s:UserScript"@ru ;
  rdfs:label "Template for v-s:UserScript class"@en ;
  v-ui:template """
<div class="container sheet">
  <div about="@" data-embedded="true" data-template="v-ui:CommonOntologyTemplate"></div>
  <div class="row">
    <div class="col-md-2 view -edit -search">
      <em about="v-s:lastRun" property="rdfs:label"></em>
      <div about="@" property="v-s:lastRun"></div>
    </div>
    <div class="col-md-2 view -edit -search">
      <em about="v-s:updateCounter" property="rdfs:label"></em>
      <div about="@" property="v-s:updateCounter"></div>
    </div>
    <div class="col-md-2 view -edit -search">
      <div class="checkbox">
        <label>
          <veda-control property="v-s:toBeRun" data-type="boolean"></veda-control>
          <em about="v-s:toBeRun" property="rdfs:label"></em>
        </label>
      </div>
    </div>
    <div class="col-md-2 view edit -search">
      <em about="v-s:runAt" property="rdfs:label"></em>
      <div property="v-s:runAt" class="view -edit -search"></div>
      <veda-control property="v-s:runAt" data-type="radio" class="-view edit search"></veda-control>
    </div>
  </div>
  <hr>
  <div class="row">
    <div class="col-md-6">
      <em about="v-s:script" property="rdfs:label" class="view edit -search"></em>
      <veda-control property="v-s:script" data-type="source" class="view edit -search"></veda-control>
    </div>
    <div class="col-md-6">
      <em about="v-s:output" property="rdfs:label" class="view edit -search"></em>
      <pre about="@" property="v-s:output" class="view edit -search" style="height:300px; overflow:auto"></pre>
    </div>
  </div>

  <hr>
  <div about="@" data-template="v-ui:SystemPropertiesTemplate" data-embedded="true"></div>
  <br>
  <div class="actions view edit -search clearfix">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="edit save cancel delete destroy"></span>
    <div class="pull-right">
      <button type="button" class="action btn btn-warning view -edit -search" id="run" about="v-s:RunBundle" property="rdfs:label"/>
      <button type="button" class="action btn btn-default -view edit -search" id="clear" about="v-s:ClearBundle" property="rdfs:label"/>
    </div>
  </div>

</div>
<script>
  // Clear output on save
  individual.on("beforeSave", clearOutput);
  template.one("remove", function () {
    individual.off("beforeSave", clearOutput);
  });
  function clearOutput () {
    this["v-s:output"] = [];
  }

  var nativeConsole = window.console;
  var nativePrint = window.print;
  var print = function () {
    var output = individual["v-s:output"][0] || "";
    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i] ;
      var argString = typeof arg !== "undefined" ? arg.toString() : "undefined" ;
      if (i === 0) {
        output += argString;
      } else {
        output += " " + argString;
      }
    }
    output += String.fromCharCode(13, 10);
    individual["v-s:output"] = [output];
  }
  var console = {
    log: print,
    time: function (timer) {
      this[timer] = new Date();
    },
    timeEnd: function (timer) {
      var delta = new Date() - this[timer];
      this.log(timer, delta, "msec");
    }
  };

  window.console = console;
  window.print = print;
  template.one("remove", function () {
    window.console = nativeConsole;
    window.print = nativePrint;
  });

  $(".action#run", template).click(function () {
    if ( individual.hasValue("v-s:runAt", "Server") ) {
      individual["v-s:toBeRun"] = [ true ];
      individual.save();
    } else {
      individual["v-s:lastRun"] = [ new Date() ];
      individual["v-s:output"] = [];
      var script = new Function("veda", individual["v-s:script"][0] || "return;");
      try {
        script(veda);
      } catch (err) {
        print(err);
      }
    }
  });
  $(".action#clear", template).click(function () {
    individual["v-s:output"] = [];
  });

  //# sourceURL=v-s:UserScriptTemplate_post
</script>
  """
.

# --------------------------User operations-----------------------------

v-s:Operation
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:UserThing ;
  rdfs:subClassOf v-s:UserScript ;
  rdfs:label "Операция"@ru ;
  rdfs:label "Operation"@en ;
  v-ui:hasTemplate v-s:OperationTemplate ;
.

v-s:PsRunAtOperation
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация свойства v-s:runAt для класса v-s:Operation"@ru ;
  rdfs:label "v-s:runAt property specification for v-s:Operation class"@en ;
  v-ui:forClass v-s:Operation ;
  v-ui:forProperty v-s:runAt ;
  v-ui:minCardinality 1 ;
  v-ui:maxCardinality 1 ;
  v-ui:defaultValue "Browser" ;
  v-ui:optionValue "Browser" ;
  v-ui:optionValue "Server" ;
.

v-s:input
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Ввод"@ru ;
  rdfs:label "Input"@en ;
  rdfs:domain v-s:Operation ;
  rdfs:range rdfs:Resource ;
.

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
<http://semantic-machines.com/veda/veda-function-create>
  rdf:type owl:Ontology ;
  rdfs:label "Veda system function 'Create' ontology"@en ;
  rdfs:label "Онтология функции 'Создать' системы Веда"@ru ;
#  owl:versionInfo "0.2" ;
  v-s:loadPriority 9 ;
.

########## CREATE FUNCTION ###########

v-fc:FunctionCreate
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Function Create"@en ;
  rdfs:label "Функция Создать"@ru ;
  v-ui:hasModel v-fc:FunctionCreateModel ;
  v-ui:hasTemplate v-fc:FunctionCreateTemplate ;
.
v-fc:Blank
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Бланк"@ru ;
  rdfs:label "Blank"@en ;
  v-ui:hasModel v-fc:BlankModel ;
  v-ui:hasTemplate v-fc:BlankTemplateShort ;
.

v-fc:BlankMgmt
  rdf:type v-s:Bundle ;
  rdfs:label "Запомнить"@ru ;
  rdfs:label "Remember"@en ;
.
v-fc:SavedBlanks
  rdf:type v-s:Bundle ;
  rdfs:label "Saved blanks"@en ;
  rdfs:label "Сохраненные бланки"@ru ;
.
v-fc:Create
  rdf:type v-fc:FunctionCreate ;
  rdfs:label "Create"@en ;
  rdfs:label "Создать"@ru ;
.
v-fc:ChooseType
  rdf:type v-s:Bundle ;
  rdfs:label "Choose a type to create"@en ;
  rdfs:label "Выберите тип объекта"@ru ;
.
v-fc:CreateBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Create"@en ;
  rdfs:label "Создание"@ru ;
.
v-fc:targetType
  rdf:type owl:ObjectProperty ;
  rdfs:label "Type"@en ;
  rdfs:label "Тип"@ru ;
  rdfs:domain v-fc:Blank ;
  rdfs:range owl:Class ;
  rdfs:range rdfs:Class ;
.
v-fc:TargetTypeSpec
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойства v-fc:targetType"@ru ;
  rdfs:label "v-fc:targetType property specification"@en ;
  v-ui:forClass v-fc:Blank, v-fc:FunctionCreate ;
  v-ui:forProperty v-fc:targetType ;
  v-ui:tooltip "Ссылка на объект класса Класс."@ru ;
  v-ui:tooltip "Link to instance of Class class"@en ;
  v-ui:queryPrefix "('rdf:type'=='owl:Class'||'rdf:type'=='rdfs:Class')"^^xsd:string ;
  v-ui:maxCardinality "1"^^xsd:integer ;
  v-ui:minCardinality "1"^^xsd:integer ;
.
v-fc:LabelSpec
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация свойства rdfs:label для класса v-fc:Blank"@ru ;
  rdfs:label "Rdfs:label property specification for class v-fc:Blank"@en ;
  v-ui:forClass v-fc:Blank ;
  v-ui:forProperty rdfs:label ;
  v-ui:tooltip "Обязательно. Строка произвольной длины."@ru ;
  v-ui:tooltip "Mandatory. Arbitrary length string."@en ;
  v-ui:maxCardinality "1"^^xsd:integer ;
  v-ui:minCardinality "1"^^xsd:integer ;
.
v-fc:FunctionCreateModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "V-fc:FunctionCreate class model"@en ;
  rdfs:label "Модель класса v-fc:FunctionCreate"@ru ;
  v-ui:forClass v-fc:FunctionCreate ;
  v-s:script """
var self = this;
//# sourceURL=v-fc:FunctionCreateModel
  """
.
v-fc:FunctionCreateTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "V-fc:FunctionCreate class template"@en ;
  rdfs:label "Шаблон класса v-fc:FunctionCreate"@ru ;
  v-ui:forClass v-fc:FunctionCreate ;
  v-ui:template """
<div class="container sheet">
  <h3 property="rdfs:label"></h3>
  <hr>
  <div class="row">
    <div class="col-md-2 col-sm-3">
      <h4 about="v-fc:SavedBlanks" property="rdfs:label"></h4>
      <ol id="blanks"></ol>
    </div>
    <div class="col-md-10 col-sm-9" style="border-left: 1px solid gainsboro;">
      <h4 about="v-fc:ChooseType" property="rdfs:label"></h4>
      <veda-control rel="v-fc:targetType" data-type="link" class="fulltext dropdown"></veda-control>
      <br>
      <div id="holder"></div>
    </div>
  </div>
</div>
<script>
  var self = individual;
  var blankTemplate = new veda.IndividualModel("v-fc:BlankTemplate");
  function typeHandler(values) {
    var holder = $("#holder", template).empty();
    if (values.length) {
      var blank = new veda.IndividualModel();
      blank["v-fc:targetType"] = values;
      blank["rdf:type"] = [ new veda.IndividualModel("v-fc:Blank") ];
      blank.present(holder, blankTemplate, "edit");
      blank.object.one("afterSave", saveHandler);
      holder.one("remove", function () {
        blank.object.off("afterSave", saveHandler);
      });
    }
    function saveHandler() {
      var self = this;
      setTimeout(function () {
        riot.route("#/" + self.id);
      }, 100);
    }
  }
  self.on("v-fc:targetType", typeHandler);
  template.one("remove", function () {
    self.off("v-fc:targetType", typeHandler);
  });
  if (self.hasValue("v-fc:targetType")) {
    typeHandler(self["v-fc:targetType"]);
  }
  var blanksHolder = $("#blanks", template),
    asp = veda.user.aspect,
    blanks = asp["v-s:hasBlank"];
  if (blanks) {
    blanks.map( function (blank) {
      var cont = $("<li>").appendTo(blanksHolder);
      blank.present( cont, new veda.IndividualModel("v-ui:LabelBlockLinkTemplate") );
    });
  }
  //# sourceURL=v-fc:FunctionCreateTemplate
</script>
  """
.

v-fc:BlankModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "v-fc:Blank class model"@en ;
  rdfs:label "Модель класса v-fc:Blank"@ru ;
  v-ui:forClass v-fc:Blank ;
  v-s:script """
var self = this,
  asp = veda.user.aspect;

var stopList = [
  "@",
  "rdf:type",
  "v-s:author",
  "v-s:publisher",
  "v-s:creator",
  "v-s:lastEditor",
  "v-s:created",
  "v-s:edited",
  "v-s:updateCounter",
  "v-s:deleted",
  "rdfs:label",
  "rdfs:isDefinedBy",
  "v-fc:targetType"
];

this._init = function () {
  if (self.object) { return; }
  self.object = new veda.IndividualModel(),
  self.object["rdf:type"] = self["v-fc:targetType"].slice(0);
  Object.getOwnPropertyNames(self.properties).map( function (property_uri) {
    if ( stopList.indexOf(property_uri) >= 0 ) { return; }
    if ( self.hasValue(property_uri) && self.get(property_uri)[0] instanceof veda.IndividualModel && self.get(property_uri)[0].is("v-fc:Blank") ) {
      self.object.set(property_uri, self.get(property_uri).map(function (item) {
        // Embedded blanks are for v-s:Embedded objects only
        // Prevent mutual v-s:parent links
        item._init();
        if ( item.object.is("v-s:Embedded") && property_uri !== "v-s:parent" ) {
          item.object["v-s:parent"] = [ self.object ];
        }
        return item.object;
      }));
    } else {
      self.object.set(property_uri, self.get(property_uri).slice(0));
    }
  });
  self.object.one("afterSave", function () {
    delete self.object;
  });
  self.object.one("afterReset", function () {
    delete self.object;
  });
}

self.on("beforeSave", updateBlank);
//self.on("afterSave", updateAspect);

function updateBlank() {
  Object.getOwnPropertyNames(self.object.properties).map( function (property_uri) {
    if ( stopList.indexOf(property_uri) >= 0 ) { return; }
    if ( self.object.hasValue(property_uri) && self.object.get(property_uri)[0] instanceof veda.IndividualModel && self.object.get(property_uri)[0].is("v-s:Embedded")) {
      self.set(property_uri, self.object.get(property_uri).map(function (item) {
        var blank = item.clone();
        var types = blank["rdf:type"];
        blank["v-fc:targetType"] = types;
        blank["rdf:type"] = [ new veda.IndividualModel("v-fc:Blank") ];
        blank["v-s:parent"] = [ self ];
        blank.save();
        return blank;
      }));
    } else {
      self.set(property_uri, self.object.get(property_uri).slice(0));
    }
  });
}
function updateAspect() {
  if (self["v-s:deleted"][0] == true) {
    asp["v-s:hasBlank"] = asp["v-s:hasBlank"].filter( function (i) { return i.id !== self.id;});
    asp.save();
  } else if (
    !asp["v-s:hasBlank"].filter( function (i) {return i.id === self.id;}).length
    && !self.hasValue("v-s:parent") // Not embedded
  ) {
    asp["v-s:hasBlank"] = asp["v-s:hasBlank"].concat(self);
    asp.save();
  }
}

//# sourceURL=v-fc:BlankModel
  """
.

v-fc:BlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "V-fc:Blank class template"@en ;
  rdfs:label "Шаблон класса v-fc:Blank"@ru ;
#  v-ui:forClass v-fc:Blank ;
  v-ui:template """
<script>
  individual._init();
</script>
<div role="tabpanel">
  <br>
  <ul class="nav nav-tabs nav-right hidden-print" role="tablist">
    <li class="pull-left"><h3 class="no-margin" about="@" property="rdfs:label"></h3></li>
    <li role="presentation"><a id="mgmt-pill" href="#mgmt" about="v-fc:BlankMgmt" property="rdfs:label" aria-controls="mgmt" role="tab" data-toggle="tab"></a></li>
    <li role="presentation" class="active"><a id="blank-pill" href="#blank" about="v-fc:Blank" property="rdfs:label" aria-controls="blank" role="tab" data-toggle="tab"></a></li>
  </ul>
  <br />
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="blank">
      <div id="object-container"></div>
      <div id="no-rights" class="alert alert-warning container hidden">
        <strong about="v-s:Attention" property="rdfs:label"></strong> <span about="v-s:NoRightsForOperation" property="rdfs:label"></span>
        <button class="btn btn-default" about="v-s:Back" property="rdfs:label" onclick="window.history.back();"></button>
      </div>
    </div>
    <div role="tabpanel" class="tab-pane" id="mgmt">
      <em about="rdfs:label" property="rdfs:label"></em>
      <p property="rdfs:label" class="view -edit search"></p>
      <veda-control data-type="string" property="rdfs:label" class="-view edit search"></veda-control>
      <br>
      <div>
        <button type="button" class="action btn btn-primary view -edit" id="edit" about="v-s:Edit" property="rdfs:label"/>
        <button type="submit" class="action btn btn-success -view edit" id="save" about="v-s:Save" property="rdfs:label"/>
        <button type="button" class="action btn btn-link view -edit" id="delete" about="v-s:Delete" property="rdfs:label"/>
      </div>
    </div>
  </div>
</div>
<script>
  var self = individual,
      objectContainer = $("#object-container", template),
      object = self.object;

  var _class = object["rdf:type"][0];
  if (_class.rights.hasValue("v-s:canCreate", true)) {
    object.present(objectContainer, _class.id === "v-fc:Blank" ? "v-fc:CreateBlankTemplate" : undefined, "edit");
    $("#cancel.action", objectContainer).click(function () {
      window.history.back();
    });
    object.one("afterSave", saveHandler);
    template.one("remove", function () {
      object.off("afterSave", saveHandler);
      self.off("beforeSave");
      self.off("afterSave");
      //delete self.object;
    });
  } else {
    $("#no-rights", template).removeClass("hidden");
  }
  function saveHandler () {
    //delete self.object;
    if (container.attr("id") === "main") {
      setTimeout(function () {
        riot.route("#/" + object.id);
      }, 100);
    }
  }
  //# sourceURL=v-fc:BlankTemplate
</script>
  """
.

v-fc:BlankTemplateShort
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "V-fc:Blank class template"@en ;
  rdfs:label "Шаблон класса v-fc:Blank"@ru ;
  v-ui:forClass v-fc:Blank ;
  v-ui:template """
<script>
  individual._init();
</script>
<div class="container sheet">
  <br>
  <div class="ribbon-wrapper top-left">
    <div class="ribbon top-left success" about="v-fc:CreateBundle" property="rdfs:label"></div>
  </div>
  <div id="object-container"></div>
  <div id="no-rights" class="alert alert-warning container hidden">
    <strong about="v-s:Attention" property="rdfs:label"></strong> <span about="v-s:NoRightsForOperation" property="rdfs:label"></span>
    <button class="btn btn-default" about="v-s:Back" property="rdfs:label" onclick="window.history.back();"></button>
  </div>
</div>
<script>
  var self = individual,
      objectContainer = $("#object-container", template),
      object = self.object;

  var _class = object["rdf:type"][0];
  if (_class.rights.hasValue("v-s:canCreate", true)) {
    object.present(objectContainer, _class.id === "v-fc:Blank" ? "v-fc:CreateBlankTemplate" : undefined, "edit");
    $("#cancel.action", objectContainer).click(function () {
      window.history.back();
    });
    object.one("afterSave", saveHandler);
    template.one("remove", function () {
      object.off("afterSave", saveHandler);
      self.off("beforeSave");
      self.off("afterSave");
      //delete self.object;
    });
  } else {
    $("#no-rights", template).removeClass("hidden");
  }
  function saveHandler () {
    //delete self.object;
    if (container.attr("id") === "main") {
      setTimeout(function () {
        riot.route("#/" + object.id);
      }, 100);
    }
  }
  //# sourceURL=v-fc:BlankTemplateShort
</script>
  """
.

v-fc:CreateBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "v-fc:Blank class template"@en ;
  rdfs:label "Шаблон класса v-fc:Blank"@ru ;
  v-ui:forClass v-fc:Blank ;
  v-ui:template """
<div class="container sheet">
  <h3 about="v-fc:Blank" property="rdfs:label"></h3>
  <em about="v-fc:targetType" property="rdfs:label"></em>
  <div rel="v-fc:targetType" class="view -edit search"></div>
  <veda-control data-type="link" rel="v-fc:targetType" class="fulltext dropdown -view edit search"></veda-control>
</div>
  """
.

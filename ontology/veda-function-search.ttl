@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix td: <http://semantic-machines.com/veda/test-data/> .

@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
<http://semantic-machines.com/veda/veda-function-search>
  rdf:type owl:Ontology ;
  rdfs:label "Veda system function 'Search' ontology"@en ;
  rdfs:label "Онтология функции 'Поиск' системы Веда"@ru ;
#  owl:versionInfo "0.2" ;
  v-s:loadPriority 9 ;
.

########## SEARCH FUNCTION ###########

v-fs:FunctionSearch
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Function Search"@en ;
  rdfs:label "Функция Поиск"@ru ;
  v-ui:hasTemplate v-fs:SearchTemplate ;
.
v-fs:FulltextRequest
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Fulltext request"@en ;
  rdfs:label "Полнотекстовый запрос"@ru ;
  v-ui:hasModel v-fs:FulltextRequestModel ;
  v-ui:hasTemplate v-fs:FulltextRequestTemplate ;
.
v-fs:AttributiveRequest
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Attributive request"@en ;
  rdfs:label "Атрибутивный запрос"@ru ;
  v-ui:hasModel v-fs:AttributiveRequestModel ;
  v-ui:hasTemplate v-fs:AttributiveRequestTemplate ;
.
v-fs:Search
  rdf:type v-fs:FunctionSearch ;
  rdfs:label "Find"@en ;
  rdfs:label "Найти"@ru ;
.
v-fs:Fulltext
  rdf:type v-fs:FulltextRequest ;
  rdfs:label "Полнотекстовый поиск"@ru ;
  rdfs:label "Fulltext search"@en ;
.
v-fs:Attributive
  rdf:type v-fs:AttributiveRequest ;
  rdfs:label "Атрибутивный поиск"@ru ;
  rdfs:label "Attributive search"@en ;
.
v-fs:fulltextQuery
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Query"@en ;
  rdfs:label "Запрос"@ru ;
  rdfs:domain v-fs:FulltextRequest ;
  rdfs:range xsd:string ;
.
v-fs:sortOrder
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Sort order"@en ;
  rdfs:label "Порядок сортировки"@ru ;
  rdfs:domain v-fs:FulltextRequest ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:databases
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Databases"@en ;
  rdfs:label "Базы данных"@ru ;
  rdfs:domain v-fs:FulltextRequest ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:range xsd:string ;
.
v-fs:reopen
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Reopen"@en ;
  rdfs:label "Открыть заново"@ru ;
  rdfs:domain v-fs:FulltextRequest ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:range xsd:boolean ;
.
v-fs:typeToSearch
  rdf:type owl:ObjectProperty ;
  rdfs:label "Тип искомого объекта"@ru ;
  rdfs:label "Type of object to search"@en ;
  rdfs:domain v-fs:FulltextRequest ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:range owl:Class ;
  rdfs:range rdfs:Class ;
.
v-fs:resultTemplate
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Шаблон отображения результатов"@ru ;
  rdfs:label "Result template"@en ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:range xsd:string ;
.
v-fs:resultTemplateRest
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Шаблон отображения результатов"@ru ;
  rdfs:label "Result template"@en ;
  rdfs:domain v-fs:AttributiveRequest ;
  rdfs:range xsd:string ;
.
v-fs:TypeToSearchSpecFT
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойства v-fs:typeToSearch для класса v-fs:FulltextRequest"@ru ;
  rdfs:label "V-fs:typeToSearch property specification for class v-fs:FulltextRequest"@en ;
  v-ui:forClass v-fs:FulltextRequest ;
  v-ui:forProperty v-fs:typeToSearch ;
  v-ui:tooltip "Ссылка на объект класса Класс."@ru ;
  v-ui:tooltip "Link to instance of Class class"@en ;
.
v-fs:TypeToSearchSpecAT
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойства v-fs:typeToSearch для класса v-fs:AttributiveRequest"@ru ;
  rdfs:label "V-fs:typeToSearch property specification for class v-fs:AttributiveRequest"@en ;
  v-ui:forClass v-fs:AttributiveRequest ;
  v-ui:forProperty v-fs:typeToSearch ;
  v-ui:tooltip "Ссылка на объект класса Класс."@ru ;
  v-ui:tooltip "Link to instance of Class class"@en ;
  v-ui:maxCardinality "1"^^xsd:integer ;
.
v-fs:FulltextQuerySpec
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация свойства v-fs:fulltextQuery для класса v-fs:FulltextRequest"@ru ;
  rdfs:label "V-fs:fulltextQuery property specification for class v-fs:FulltextRequest"@en ;
  v-ui:forClass v-fs:FulltextRequest ;
  v-ui:forProperty v-fs:fulltextQuery ;
  v-ui:maxCardinality "1"^^xsd:integer ;
  v-ui:tooltip "Введите запрос"@ru ;
  v-ui:tooltip "Enter query"@en ;
.
v-fs:LabelSpec
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация свойства rdfs:label для классов v-fs:FulltextRequest, v-fs:AttributiveRequest"@ru ;
  rdfs:label "Rdfs:label property specification for class v-fs:FulltextRequest, v-fs:AttributiveRequest"@en ;
  v-ui:forClass v-fs:FulltextRequest ;
  v-ui:forClass v-fs:AttributiveRequest ;
  v-ui:forProperty rdfs:label ;
  v-ui:tooltip "Обязательно. Строка произвольной длины."@ru ;
  v-ui:tooltip "Mandatory. Arbitrary length string."@en ;
  v-ui:maxCardinality "1"^^xsd:integer ;
  v-ui:minCardinality "1"^^xsd:integer ;
.
v-fs:RequestMgmt
  rdf:type v-s:Bundle ;
  rdfs:label "Remember"@en ;
  rdfs:label "Запомнить"@ru ;
.
v-fs:SavedRequests
  rdf:type v-s:Bundle ;
  rdfs:label "Saved requests"@en ;
  rdfs:label "Сохраненные запросы"@ru ;
.
v-fs:FulltextBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Fulltext"@en ;
  rdfs:label "Полнотекстовый"@ru ;
.
v-fs:AttributiveBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Attributive"@en ;
  rdfs:label "Атрибутивный"@ru ;
.
v-fs:Request
  rdf:type v-s:Bundle ;
  rdfs:label "Request"@en ;
  rdfs:label "Запрос"@ru ;
.
v-fs:EnterQuery
  rdf:type v-s:Bundle ;
  rdfs:label "Enter query"@en ;
  rdfs:label "Введите запрос"@ru ;
.
v-fs:ChooseType
  rdf:type v-s:Bundle ;
  rdfs:label "Choose type to search"@en ;
  rdfs:label "Выберите тип объекта"@ru ;
.
v-fs:Params
  rdf:type v-s:Bundle ;
  rdfs:label "What we search for?"@en ;
  rdfs:label "Что ищем?"@ru ;
.
v-fs:Find
  rdf:type v-s:Bundle ;
  rdfs:label "Find"@en ;
  rdfs:label "Найти"@ru ;
.
v-fs:Excel
  rdf:type v-s:Bundle ;
  rdfs:label "Excel"@en ;
  rdfs:label "Excel"@ru ;
.
v-fs:FilesRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Registry with files"@en ;
  rdfs:label "Реестр с файлами"@ru ;
.
v-fs:SetColumns
  rdf:type v-s:Bundle ;
  rdfs:label "Set columns"@en ;
  rdfs:label "Настроить столбцы"@ru ;
.
v-fs:Results
  rdf:type v-s:Bundle ;
  rdfs:label "Results"@en ;
  rdfs:label "Результаты"@ru ;
.
v-fs:Empty
  rdf:type v-s:Bundle ;
  rdfs:label "Empty!"@en ;
  rdfs:label "Пусто!"@ru ;
.
v-fs:NothingFound
  rdf:type v-s:Bundle ;
  rdfs:label "Nothing found for your request. Please refine the query."@en ;
  rdfs:label "По Вашему запросу ничего не найдено. Пожалуйста, уточните запрос."@ru ;
.
v-fs:MoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "More results"@en ;
  rdfs:label "Еще результаты"@ru ;
.
v-fs:AllResults
  rdf:type v-s:Bundle ;
  rdfs:label "Load all results"@en ;
  rdfs:label "Загрузить все результаты"@ru ;
.
v-fs:NoMoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "All results loaded"@en ;
  rdfs:label "Все результаты загружены"@ru ;
.
v-fs:SetResultsTable
  rdf:type v-s:Bundle ;
  rdfs:label "Set results table"@en ;
  rdfs:label "Настройте таблицу отображения результатов"@ru ;
.
v-fs:GenericTable
  rdf:type v-s:Bundle ;
  rdfs:label "Generic table"@en ;
  rdfs:label "Таблица по-умолчанию"@ru ;
.
v-fs:CustomTable
  rdf:type v-s:Bundle ;
  rdfs:label "Custom table"@en ;
  rdfs:label "Таблица для отображения"@ru ;
.
v-fs:DragColumns
  rdf:type v-s:Bundle ;
  rdfs:label "Drag columns from generic table"@en ;
  rdfs:label "Перетащите столбцы из таблицы по-умолчанию."@ru ;
.
v-fs:SearchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Search class template"@en ;
  rdfs:label "Шаблон класса поиск"@ru ;
  v-ui:forClass v-fs:FunctionSearch ;
  v-ui:template """
  <div class="container sheet">
    <h3 about="v-fs:Find" property="rdfs:label"></h3>
    <hr>
    <div class="row">
      <div class="col-md-2 col-sm-3">
        <h4></h4>
        <ul class="nav nav-pills nav-stacked" role="tablist" id="req-tabs">
          <li role="presentation" class="active"><a href="#fulltext-search" about="v-fs:FulltextBundle" property="rdfs:label" aria-controls="fulltext-search" role="tab" data-toggle="tab"></a></li>
          <li role="presentation"><a href="#attributive-search" about="v-fs:AttributiveBundle" property="rdfs:label" aria-controls="attributive-search" role="tab" data-toggle="tab"></a></li>
        </ul>
        <hr>
        <h4 about="v-fs:SavedRequests" property="rdfs:label"></h4>
        <ol id="saved"></ol>
      </div>
      <div class="col-md-10 col-sm-9" style="border-left: 1px solid gainsboro;">
        <div class="tab-content">
          <div role="tabpanel" class="tab-pane active" id="fulltext-search"></div>
          <div role="tabpanel" class="tab-pane" id="attributive-search"></div>
        </div>
      </div>
    </div>
  </div>
  <script>
    var self = individual,
      ftHolder = $("#fulltext-search", template),
      attrHolder = $("#attributive-search", template);
    if (!self.ftRequest) {
      self.ftRequest = new veda.IndividualModel();
      self.ftRequest["rdf:type"] = [ new veda.IndividualModel("v-fs:FulltextRequest") ];
    }
    self.ftRequest.present(ftHolder, undefined, "edit");

    if (!self.attrRequest) {
      self.attrRequest = new veda.IndividualModel();
      self.attrRequest["rdf:type"] = [ new veda.IndividualModel("v-fs:AttributiveRequest") ];
    }
    self.attrRequest.present(attrHolder, undefined, "edit");

    $("#req-tabs a", template).click(function (e) {
      e.preventDefault();
      if ($(this).attr("href") === "#fulltext-search") {
        individual.reqType = "fulltext";
      } else {
        individual.reqType = "attributive";
      }
    });

    if (individual.reqType === "attributive") {
      $("#req-tabs a[href='#attributive-search']", template).tab("show");
      individual.reqType = "attributive";
    } else {
      $("#req-tabs a[href='#fulltext-search']", template).tab("show");
      individual.reqType = "fulltext";
    }

    var regsHolder = $("#saved", template),
      asp = veda.user.aspect,
      regs = asp["v-s:hasRegistry"];
    if (regs) {
      regs.map( function (reg) {
        var cont = $("<li>").appendTo(regsHolder);
        reg.present( cont, new veda.IndividualModel("v-ui:LabelBlockLinkTemplate") );
      });
    }
    //# sourceURL=v-fs:SearchTemplate
  </script>
"""
.
v-fs:FulltextRequestModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "V-fs:FulltextRequest class model"@en ;
  rdfs:label "Модель класса v-fs:FulltextRequest"@ru ;
  v-ui:forClass v-fs:FulltextRequest ;
  v-s:script """
  var self = this,
    q = mkQuery(),
    sort = self.hasValue("v-fs:sortOrder")      ? self["v-fs:sortOrder"][0] : undefined,
    databases = self.hasValue("v-fs:databases") ? self["v-fs:databases"][0] : undefined,
    reopen = self.hasValue("v-fs:reopen")       ? self["v-fs:reopen"][0]    : false;

  self.on("propertyModified", function (property_uri, values) {
    switch (property_uri) {
      case "v-fs:typeToSearch":
      case "v-fs:fulltextQuery" : q = mkQuery(); break;
      case "v-fs:sortOrder"   : sort = values.length      ? values[0].toString() : undefined; break;
      case "v-fs:databases"   : databases = values.length ? values[0].toString() : undefined; break;
      case "v-fs:reopen"      : reopen = values.length    ? values[0].toString() : false; break;
    }
  });
  self.result  = [];
  self.count  = 0;
  self.selected = [];
  self.q = q;
  self.search = function (qq, ss) {
    self.trigger("beforeSearch");
    self.result = query(veda.ticket, qq ? qq : q, ss ? ss : sort, databases, reopen).result;
    self.count = self.result.length;
    self.trigger("afterSearch", self.result);
    return self.result;
  };
  // Search if query defined
  //if (q) { self.search() };

  function mkQuery () {
    var type = self.hasValue("v-fs:typeToSearch") ? "('rdf:type'=='" + self["v-fs:typeToSearch"][0].id + "')" : "";
    var q = self.hasValue("v-fs:fulltextQuery") ? "('*'=='" + self["v-fs:fulltextQuery"][0] + "')" : "";
    return [type, q].filter(function (item) { return !!item }).join(" && ");
  }
  //# sourceURL=v-fs:FulltextRequestModel
  """
.
v-fs:FulltextRequestTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Fulltext request class template"@en ;
  rdfs:label "Шаблон класса полнотекстовый запрос"@ru ;
  v-ui:forClass v-fs:FulltextRequest ;
  v-ui:template """
<div role="tabpanel" class="container sheet">
  <br>
  <!-- Nav tabs -->
  <ul class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 class="no-margin" about="@" property="rdfs:label"></h2></li>
    <li role="presentation"><a id="refresh" href="#refresh"><i class="fa fa-refresh fa-lg"></i></a></li>
    <li role="presentation"><a href="#mgmt-ft" about="v-fs:RequestMgmt" property="rdfs:label" aria-controls="mgmt-ft" role="tab" data-toggle="tab"></a></li>
    <li role="presentation"><a id="results-pill-ft" href="#results-ft" aria-controls="results-ft" role="tab" data-toggle="tab"><span href="#params-ft" about="v-fs:Results" property="rdfs:label"></span> <span class="badge" id="results-count">0</span></a></li>
    <li role="presentation" class="active"><a id="params-pill-ft" href="#params-ft" about="v-fs:Params" property="rdfs:label" aria-controls="params-ft" role="tab" data-toggle="tab"></a></li>
  </ul>
  <br />
  <!-- Tab panes -->
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="params-ft">
      <div class="not-found alert alert-warning" style="display: none">
        <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
      </div>
      <form role="form">
        <h4 about="v-fs:EnterQuery" property="rdfs:label"></h4>
        <div class="form-group">
          <div class="input-group">
            <veda-control data-type="string" property="v-fs:fulltextQuery"></veda-control>
            <span class="input-group-btn">
              <button type="submit" id="submit" class="btn btn-primary" about="v-fs:Find" property="rdfs:label"></button>
            </span>
          </div>
        </div>
        <h4 about="v-fs:ChooseType" property="rdfs:label"></h4>
        <div rel="v-fs:typeToSearch" data-template="v-ui:ClassNameLabelLinkTemplate"></div>
        <veda-control rel="v-fs:typeToSearch" data-type="link" class="fulltext dropdown" data-template="{individual['rdfs:label'].join(' ') + ' (' + individual.id + ')'}"></veda-control>
      </form>
    </div>
    <div role="tabpanel" class="tab-pane" id="results-ft">
      <div class="not-found alert alert-warning" style="display: none">
        <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
      </div>
      <div id="search-results">
        <ol id="results-list"></ol>
        <div class="text-center">
          <ul class="pagination" id="pager"></ul>
          <br />
        </div>
      </div>
    </div>
    <div role="tabpanel" class="tab-pane" id="mgmt-ft">
      <em about="rdfs:label" property="rdfs:label"></em>
      <p property="rdfs:label" class="view -edit -search"></p>
      <veda-control id="query" data-type="string" property="rdfs:label" class="-view edit search"></veda-control>
      <br>
      <div>
        <button type="button" class="action btn btn-primary view -edit" id="edit" about="v-s:Edit" property="rdfs:label"/>
        <button type="submit" class="action btn btn-success -view edit" id="save" about="v-s:Save" property="rdfs:label"/>
        <button type="button" class="action btn btn-link view -edit" id="delete" about="v-s:Delete" property="rdfs:label"/>
      </div>
    </div>
  </div>
  <div class="modal" id="object-modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title"></h4>
        </div>
        <div class="modal-body"></div>
      </div>
    </div>
  </div>
</div>
<script>
  var self = individual,
    asp = veda.user.aspect,
    notFound = $(".not-found", template),
    params = $("a#params-pill-ft", template),
    results = $("a#results-pill-ft", template),
    pager = $("#pager", template),
    resultsList = $("#results-list", template),
    resultsCount = $("#results-count", template),
    submit = $("#submit", template),
    query = $("#query", template),
    form = new veda.IndividualModel();

  // Autofocus on query field
  params.on("shown.bs.tab", function () {
    if (!self.hasValue("v-fs:attributiveQuery")) {
      query.trigger("veda_focus");
    }
  });
  params.trigger("shown.bs.tab");

  // Enter on query field triggers search
  submit.click( function (e) {
    e.preventDefault();
    self.search();
  });

  // Define and clean handlers
  self.on("beforeSearch", beforeSearch);
  self.on("afterSearch", afterSearch);
  self.on("afterSave", updateAspect);
  template.one("remove", function () {
    self.off("beforeSearch", beforeSearch);
    self.off("afterSearch", afterSearch);
    self.off("afterSave", updateAspect);
  });

  // Present results if query defined
  if (self.q) {
    //self.trigger("afterSearch");
    self.search();
  }

  $("#refresh", template).click(function (e) {
    e.preventDefault();
    self.search();
  });

  // Modal for links
  var $objModal = $("#object-modal", template).modal({show: false});
  var cntr = $(".modal-body", $objModal);
  template.one("remove", function () {
    $objModal.modal("hide");
  });
  resultsList.on("click", "a[resource]", function (e) {
    e.preventDefault();
    var uri = $(this).attr("resource"),
      link = new veda.IndividualModel(uri);
    cntr.empty();
    link.present(cntr);
    $objModal.modal("show");
    $objModal.focus();
  });

  // Update user aspect when search request was saved
  function updateAspect() {
    if (self["v-s:deleted"][0] == true) {
      asp["v-s:hasRegistry"] = asp["v-s:hasRegistry"].filter( function (i) { return i.id !== self.id;});
    } else if (
      !asp["v-s:hasRegistry"].filter( function (i) {return i.id === self.id;}).length
    ) {
      asp["v-s:hasRegistry"] = asp["v-s:hasRegistry"].concat(self);
    }
    asp.save();
  }

  function genericTemplate(individual) {
    var head = "<strong><a href='#/@' about='@' data-template='v-ui:ClassNameLabelTemplate'></a></strong>";
    var allprops = Object.getOwnPropertyNames(individual.properties);
    var props = "<br>";
    for (var i = 0, uri; (uri = allprops && allprops[i]); i++) {
      if (uri === "@") { continue }
      if ( individual.hasValue(uri) ) {
        props += "<i about='" + uri + "' property='rdfs:label'></i>: "
        if (individual.get(uri)[0] instanceof veda.IndividualModel) {
          props += "<span about='@' rel='" + uri + "' data-template='v-ui:LabelEmptyLinkTemplate'></span>; "
        } else {
          props += "<span about='@' property='" + uri + "'></span>; "
        }
      }
    }
    return "<p>" + head + props + "</p>";
  }

  // Present results
  function beforeSearch() {
    notFound.hide();
    resultsList.empty();
    pager.empty();
    resultsCount.text(0);
  }
  function afterSearch() {
    resultsList.empty();
    pager.empty();
    resultsCount.text(self.count);

    // Nothing found
    if (self.count === 0) {
      notFound.show();
    }
    // Render results
    self.page = self.page || 0;
    if (self.count < self.page * veda.user.displayedElements) {
      self.page = Math.floor(self.count / veda.user.displayedElements) + 1 * (self.count % veda.user.displayedElements ? 1 : 0) - 1;
    }
    resultsList.attr("start", self.page * veda.user.displayedElements + 1);
    results.tab("show");

    for (var i = self.page * veda.user.displayedElements; i < (self.page + 1) * veda.user.displayedElements && i < self.count; i++) {
      (function (i) {
        setTimeout(function () {
          var container = $("<li>").appendTo(resultsList);
          var result = new veda.IndividualModel( self.result[i] );
          var tmpl = genericTemplate(result);
          result.present(container, $(tmpl));
        }, 0);
      }(i));
    }

    // Pager
    pager.pager({
      pages: Math.floor(self.count / veda.user.displayedElements) + 1 * (self.count % veda.user.displayedElements ? 1 : 0),
      active: self.page + 1,
      neighbours: 3,
      click: function (page) {
        if (page - 1 === self.page) return false;
        self.page = page - 1;
        self.trigger("afterSearch");
      }
    });
  }
  //# sourceURL=v-fs:FulltextRequestTemplate
</script>
  """
.
v-fs:AttributiveRequestModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "V-fs:AttributiveRequest class model"@en ;
  rdfs:label "Модель класса v-fs:AttributiveRequest"@ru ;
  v-ui:forClass v-fs:AttributiveRequest ;
  v-s:script """
  var stopList = [
    "@",
    "rdf:type",
    "v-s:author",
    "v-s:publisher",
    "v-s:creator",
    "v-s:lastEditor",
    "v-s:created",
    "v-s:edited",
    "v-s:updateCounter",
    "v-s:deleted",
    "rdfs:label",
    "rdfs:isDefinedBy",
    "v-fs:sortOrder",
    "v-fs:databases",
    "v-fs:reopen",
    "v-fs:typeToSearch",
    "v-fs:resultTemplate",
    "v-fs:resultTemplateRest"
  ];
  var mkQuery = veda.Util.queryFromIndividual;

  var self = this,
    sort = self.hasValue("v-fs:sortOrder")      ? self["v-fs:sortOrder"][0] : undefined,
    databases = self.hasValue("v-fs:databases") ? self["v-fs:databases"][0] : undefined,
    reopen = self.hasValue("v-fs:reopen")       ? self["v-fs:reopen"][0]    : false,
    q;

  self.on("propertyModified", function (property_uri, values) {
    switch (property_uri) {
      case "v-fs:typeToSearch":
        self.form = new veda.IndividualModel();
        self.form["rdf:type"] = values;
        for (var property_uri in self.properties) {
          if ( stopList.indexOf(property_uri) >= 0 ) { continue; }
          self.form.set(property_uri, self.get(property_uri));
        }
        self.form.on("propertyModified", handler);
        q = mkQuery(self.form);
        break;
      case "v-fs:sortOrder"   : sort = values.length      ? values[0].toString() : undefined; break;
      case "v-fs:databases"   : databases = values.length ? values[0].toString() : undefined; break;
      case "v-fs:reopen"      : reopen = values.length    ? values[0].toString() : false; break;
    }
  });

  if (self.hasValue("v-fs:typeToSearch")) {
    self.trigger("propertyModified", "v-fs:typeToSearch", self["v-fs:typeToSearch"]);
  }

  function handler(property_uri, values) {
    if ( stopList.indexOf(property_uri) < 0 ) {
      self.set(property_uri, values);
    }
    q = mkQuery(self.form);
  }

  self.result  = [];
  self.count  = 0;
  self.selected = [];
  self.q = q;
  self.search = function () {
    self.trigger("beforeSearch");
    self.result = query(veda.ticket, q, sort, databases, reopen).result;
    self.count = self.result.length;
    self.trigger("afterSearch");
    return self.result;
  };
  // Search if query defined
  //if (q) { self.search() };
  //# sourceURL=v-fs:AttributiveRequestModel
  """
.
v-fs:AttributiveRequestTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "V-fs:AttributiveRequest class template"@en ;
  rdfs:label "Шаблон класса v-fs:AttributiveRequest"@ru ;
  v-ui:forClass v-fs:AttributiveRequest ;
  v-ui:template """
<div role="tabpanel" class="container sheet">
  <br>
  <!-- Nav tabs -->
  <ul class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 class="no-margin" about="@" property="rdfs:label"></h2></li>
    <li role="presentation"><a id="refresh" href="#refresh"><i class="fa fa-refresh fa-lg"></i></a></li>
    <li role="presentation"><a id="xls" href="#xls"><i class="fa fa-table fa-lg"></i></a></li>
    <li role="presentation"><a href="#mgmt-at" about="v-fs:RequestMgmt" property="rdfs:label" aria-controls="mgmt-at" role="tab" data-toggle="tab"></a></li>
    <li role="presentation"><a id="results-pill-at" href="#results-at" aria-controls="results-at" role="tab" data-toggle="tab"><span href="#params-at" about="v-fs:Results" property="rdfs:label"></span> <span class="badge" id="results-count">0</span></a></li>
    <li role="presentation" class="active"><a id="params-pill-at" href="#params-at" about="v-fs:Params" property="rdfs:label" aria-controls="params-at" role="tab" data-toggle="tab"></a></li>
  </ul>
  <br />
  <!-- Tab panes -->
  <div id="not-found" class="alert alert-warning" style="display: none">
    <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
  </div>
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="params-at">
      <h4 about="v-fs:ChooseType" property="rdfs:label"></h4>
      <veda-control rel="v-fs:typeToSearch" data-type="link" class="fulltext dropdown" data-template="{individual['rdfs:label'].join(' ') + ' (' + individual.id + ')'}"></veda-control>
      <br>
      <div id="form-holder"></div>
      <br>
      <button type="button" id="find" class="btn btn-primary" about="v-fs:Find" property="rdfs:label"></button>
      <hr>
      <h4 about="v-fs:SetResultsTable" property="rdfs:label"></h4>
      <div id="set-result-template" class="table-responsive">
        <table id="generic-table" class="table table-condensed table-bordered">
          <caption about="v-fs:GenericTable" property="rdfs:label"></caption>
          <thead id="generic-head"></thead>
        </table>

        <table id="custom-table" class="table table-condensed table-bordered">
          <caption about="v-fs:CustomTable" property="rdfs:label"></caption>
          <thead id="custom-head">
            <tr><td><em about="v-fs:DragColumns" property="rdfs:label"></em></td></tr>
          </thead>
        </table>
      </div>
      <br>
      <button class="btn btn-danger" id="clear-custom" about="v-s:Reset" property="rdfs:label"></button>
    </div>
    <div role="tabpanel" class="tab-pane" id="results-at">
      <div id="search-results">
        <div class="table-responsive">
          <table id="results-tbl" class="table table-condensed table-striped table-bordered">
            <thead id="results-head"></thead>
            <tbody id="results-body"></tbody>
          </table>
        </div>
        <div class="text-center">
          <ul class="pagination" id="pager"></ul>
          <br />
        </div>
      </div>
    </div>
    <div role="tabpanel" class="tab-pane" id="mgmt-at">
      <em about="rdfs:label" property="rdfs:label"></em>
      <p property="rdfs:label" class="view -edit -search"></p>
      <veda-control data-type="string" property="rdfs:label" class="-view edit search"></veda-control>
      <br>
      <div>
        <button type="button" class="action btn btn-primary view -edit" id="edit" about="v-s:Edit" property="rdfs:label"/>
        <button type="submit" class="action btn btn-success -view edit" id="save" about="v-s:Save" property="rdfs:label"/>
        <button type="button" class="action btn btn-link view -edit" id="delete" about="v-s:Delete" property="rdfs:label"/>
      </div>
    </div>
  </div>
  <div class="modal" id="object-modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title"></h4>
        </div>
        <div class="modal-body"></div>
      </div>
    </div>
  </div>
</div>
<script>
  var self = individual,
    asp = veda.user.aspect,
    notFound = $("#not-found", template),
    params = $("a#params-pill-at", template),
    results = $("a#results-pill-at", template),
    pager = $("#pager", template),
    resultsCount = $("#results-count", template),
    find = $("#find", template),
    fulltext = $("#fulltext", template),
    formHolder = $("#form-holder", template),
    tHead = $("thead#results-head", template),
    tBody = $("tbody#results-body", template),
    genericHead = $("thead#generic-head", template),
    customHead = $("thead#custom-head", template),
    clearCustom = $("#clear-custom", template),
    head, rest, tmpl;

  // Autofocus on query field
  params.on("shown.bs.tab", function () {
    if (!self.hasValue("v-fs:attributiveQuery")) {
      $("#fulltext", template).trigger("veda_focus");
    }
  });
  params.trigger("shown.bs.tab");

  // Enter on query field triggers search
  find.click( function (e) {
    e.preventDefault();
    self.search();
  });

  clearCustom.click(function () {
    self["v-fs:resultTemplate"] = [];
    self["v-fs:resultTemplateRest"] = [];
    setResultTable( self["v-fs:typeToSearch"] );
  });

  // Define and clean handlers
  self.on("beforeSearch", beforeSearch);
  self.on("afterSearch", afterSearch);
  self.on("afterSave", updateAspect);
  self.on("v-fs:typeToSearch", typeChanged);
  template.one("remove", function () {
    self.off("beforeSearch", beforeSearch);
    self.off("afterSearch", afterSearch);
    self.off("afterSave", updateAspect);
    self.off("v-fs:typeToSearch", typeChanged);
  });

  // Present form if defined
  if (self.form) {
    typeChanged(self["v-fs:typeToSearch"]);
  }

  // Present results if query defined
  if (self.q) {
    //self.trigger("afterSearch");
    self.search();
  }

  $("#refresh", template).click(function (e) {
    e.preventDefault();
    self.search();
  });

  // Modal for links
  var $objModal = $("#object-modal", template).modal({show: false});
  var cntr = $(".modal-body", $objModal);
  template.one("remove", function () {
    $objModal.modal("hide");
  });
  tBody.on("click", "a[resource]", function (e) {
    e.preventDefault();
    var uri = $(this).attr("resource"),
      link = new veda.IndividualModel(uri);
    cntr.empty();
    link.present(cntr);
    $objModal.modal("show");
    $objModal.focus();
  });

  // Display search form
  function typeChanged(types) {
    formHolder.empty();
    self.form.present(formHolder, undefined, "search");
    setResultTable(types);
  }

  // Set result table
  function setResultTable(types) {
    if ( self.hasValue("v-fs:resultTemplate") ) {
      head = $( self["v-fs:resultTemplate"][0].toString() );
      $(".rdfs-label", head).each(function () {
        this.textContent = (new veda.IndividualModel(this.parentNode.id))["rdfs:label"].join(", ");
      });
      customHead.html( head );
      rest = $( self["v-fs:resultTemplateRest"][0].toString() );
      genericHead.html( rest );
    } else {
      head = gen_head(types[0]);
      genericHead.html(head);
      customHead.empty();
      var placeholder = (new veda.IndividualModel("v-fs:DragColumns")).present(customHead, $('<tr><td><em about="v-fs:DragColumns" property="rdfs:label"></em></td></tr>'));
    }
    tHead.html( head.clone() );

    // Sorting
    var sortBy = "", dir = "";
    if ( self.hasValue("v-fs:sortOrder") ) {
      var t = self["v-fs:sortOrder"][0].split(" ");
      sortBy = t[0]; dir = t[1];
    }
    $("a.sort", tHead).each( function () {
      var a = $(this);
      var property_uri = a.parent().attr("id");
      if (sortBy.indexOf(property_uri) >= 0) {
        a.removeClass("text-muted");
        if (dir === "desc") a.removeClass("glyphicon-sort-by-attributes").addClass("glyphicon-sort-by-attributes-alt");
      }
      a.click(function (e) {
        e.preventDefault();
        var $this = $(this);
        $("a.sort", tHead).addClass("text-muted");
        var dir = $this.hasClass("glyphicon-sort-by-attributes-alt") ? " asc" : " desc";
        $this.removeClass("text-muted").toggleClass("glyphicon-sort-by-attributes glyphicon-sort-by-attributes-alt");
        self["v-fs:sortOrder"] = ["'" + property_uri + "_" + Object.keys(veda.user.language)[0].toLowerCase() + "'" + dir + " , " + "'" + property_uri + "'" + dir];
        self.search();
        return false;
      });
    });
    tmpl = gen_row(head)[0].outerHTML;

    $("thead#generic-head > tr").sortable({
      connectWith: "thead#custom-head > tr",
      placeholder: "danger",
      receive: function () {
        self["v-fs:resultTemplateRest"] = [ this.outerHTML ];
        setResultTable(types);
      },
      remove: function () {
        self["v-fs:resultTemplateRest"] = [ this.outerHTML ];
        setResultTable(types);
      }
    });
    $("thead#custom-head > tr").sortable({
      connectWith: "thead#generic-head > tr",
      placeholder: "danger",
      receive: function () {
        self["v-fs:resultTemplate"] = [ this.outerHTML ];
        setResultTable(types);
      },
      remove: function () {
        self["v-fs:resultTemplate"] = [ this.outerHTML ];
        setResultTable(types);
      }
    });
  }

  // Update user aspect when search request was saved
  function updateAspect() {
    if (self["v-s:deleted"][0] == true) {
      asp["v-s:hasRegistry"] = asp["v-s:hasRegistry"].filter( function (i) { return i.id !== self.id;});
    } else if (
      !asp["v-s:hasRegistry"].filter( function (i) {return i.id === self.id;}).length
    ) {
      asp["v-s:hasRegistry"] = asp["v-s:hasRegistry"].concat(self);
    }
    asp.save();
  }

  // Generic header from class
  function gen_head(type) {
    var ontology = new veda.OntologyModel();
    var props = ontology.getClassProperties(type.id);
    var literals = ["rdfs:Literal", "xsd:string", "xsd:boolean", "xsd:integer", "xsd:nonNegativeInteger", "xsd:decimal", "xsd:dateTime"];
    var tr = $("<tr><th id='count' width='20px'>#</th><th id='zoom' width='20px'><span class='glyphicon glyphicon-search'></span></th><th id='@'>@</th></tr>");
    var header = props.map( function (property_uri) {
      if (property_uri === "rdf:type" || property_uri === "v-s:deleted") { return ""; }
      var property = new veda.IndividualModel(property_uri);
      var th = $("<th id='" + property_uri + "'><span class='rdfs-label'>" + property["rdfs:label"].join(", ") + "</span></th>");
      var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : undefined;
      if (literals.indexOf(range) >= 0) {
        var sortOrder = $("<a>", {href:""}).addClass("sort btn btn-xs btn-link text-muted glyphicon glyphicon-sort-by-attributes");
        th.prepend(sortOrder);
      }
      tr.append(th);
    });
    return tr;
  }

  // Generate row from header
  function gen_row(head) {
    var hd = $(head);
    var literals = ["rdfs:Literal", "xsd:string", "xsd:boolean", "xsd:integer", "xsd:nonNegativeInteger", "xsd:decimal", "xsd:dateTime"];
    var row = $("<tr>");
    hd.children().each( function () {
      var td = $("<td>");
      if (this.id === "count") {
        td.text("###");
      } else if (this.id === "zoom") {
        td.html("<a href='#/@'><span class='glyphicon glyphicon-search'></span></a>");
      } else if (this.id === "@") {
        td.attr("property", "@");
      } else {
        var property = new veda.IndividualModel( this.id );
        var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : undefined;
        if (range === "xsd:boolean") {
          td.html( "<veda-control data-type='boolean' property='" + property.id + "'></veda-control>" );
        } else if (literals.indexOf(range) >= 0) {
          td.attr("property", property.id);
        } else {
          td.attr("rel", property.id).attr("data-template", "v-ui:LabelEmptyLinkTemplate");
        }
      }
      td.appendTo(row);
    });
    return row;
  }

  // Present results
  function beforeSearch() {
    notFound.hide();
    tBody.empty();
    pager.empty();
    resultsCount.text(0);
  }
  function afterSearch() {
    tBody.empty();
    pager.empty();
    resultsCount.text(self.count);

    // Nothing found
    if (self.count === 0) {
      notFound.show();
    }
    // Render results
    self.page = self.page || 0;
    if (self.count < self.page * veda.user.displayedElements) {
      self.page = Math.floor(self.count / veda.user.displayedElements) + 1 * (self.count % veda.user.displayedElements ? 1 : 0) - 1;
    }
    results.tab("show");

    for (var i = self.page * veda.user.displayedElements; i < (self.page + 1) * veda.user.displayedElements && i < self.count; i++) {
      (function (i) {
        setTimeout(function () {
          var _tmpl = tmpl.replace("###", i+1);
          var $tmpl = $(_tmpl);
          var result = new veda.IndividualModel( self.result[i] );
          result.present(tBody, $tmpl);
          $tmpl.dblclick(function (e) {
            riot.route("#/" + result.id);
          });
        }, 0);
      }(i));
    }

    // Pager
    pager.pager({
      pages: Math.floor(self.count / veda.user.displayedElements) + 1 * (self.count % veda.user.displayedElements ? 1 : 0),
      active: self.page + 1,
      neighbours: 3,
      click: function (page) {
        if (page - 1 === self.page) return false;
        self.page = page - 1;
        self.trigger("afterSearch");
      }
    });
  }

  // Export to Spreadsheet
  var tableToExcel = (function () {
    var uri = 'data:application/vnd.ms-excel;base64,'
      , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
      , format = function(s, c) { return s.replace(/{([a-z]+)}/g, function(m, p) { return c[p]; }) }
    return function(table, name) {
      if (!table.nodeType) table = document.getElementById(table)
      var ctx = {
        worksheet: name || 'Worksheet',
        table: table.innerHTML
      };
      var formatted = format(template, ctx);
      var blob = new Blob([formatted], {type: "application/vnd.ms-excel;charset=utf-8"});
      saveAs(blob, name + ".xls");
    }
  })();

  $("#xls", template).click(function (e) {
    e.preventDefault();
    var hd = tHead.clone().removeAttr("id");
    var tbl = $("<table id='export2xls'>").append(hd, "<tbody></tbody>");
    var tmpl = gen_row_simple(head)[0].outerHTML;

    for (var i = 0; i < self.count; i++) {
      (function (i) {
        var _tmpl = tmpl.replace("###", i+1);
        var result = new veda.IndividualModel( self.result[i] );
        result.present($("tbody", tbl), $(_tmpl));
      }(i));
    }
    setTimeout(function () {
      tableToExcel(tbl[0], self["rdfs:label"].join(", "));
    }, 0);
  });

  function gen_row_simple(head) {
    var hd = $(head);
    var literals = ["rdfs:Literal", "xsd:string", "xsd:boolean", "xsd:integer", "xsd:nonNegativeInteger", "xsd:decimal", "xsd:dateTime"];
    var row = $("<tr>");
    hd.children().each( function () {
      var td = $("<td>");
      if (this.id === "count") {
        td.text("###");
      } else if (this.id === "zoom") {
        td.html("");
      } else if (this.id === "@") {
        td.attr("property", "@");
      } else {
        var property = new veda.IndividualModel( this.id );
        var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : undefined;
        if (literals.indexOf(range) >= 0) {
          td.attr("property", property.id);
        } else {
          td.attr("about", "@").attr("rel", property.id).attr("data-template", "v-ui:LabelTemplate");
        }
      }
      td.appendTo(row);
    });
    return row;
  }
  //# sourceURL=v-fs:AttributiveRequestTemplate
</script>
  """
.

# ============================ NEW ============================

v-fs:AttributiveSearch
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Attributive search"@en ;
  rdfs:label "Атрибутивный поиск"@ru ;
  v-ui:hasTemplate v-fs:AttributiveSearchTemplate ;
.

v-fs:searchBlankTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон формы поиска"@ru ;
  rdfs:label "Search form template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchResultTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон результатов поиска"@ru ;
  rdfs:label "Search result template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchBlank
  rdf:type owl:ObjectProperty ;
  rdfs:label "Бланк поиска"@ru ;
  rdfs:label "Search blank"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-fc:Blank ;
.

v-fs:searchOnLoad
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Искать сразу"@ru ;
  rdfs:label "Search on load"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:loadAll
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Загрузить все"@ru ;
  rdfs:label "Load all"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.

v-fs:TotalFoundBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Total found"@en ;
  rdfs:label "Всего найдено"@ru ;
.

v-fs:TotalProcessedBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Processed"@en ;
  rdfs:label "Обработано"@ru ;
.

v-fs:TotalAuthorizedBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Authorized"@en ;
  rdfs:label "Вам доступно"@ru ;
.

v-fs:SearchBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Поиск"@ru ;
  rdfs:label "Search"@en ;
.

v-fs:CtrlEnterBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Нажмите 'Ctrl + Enter' чтобы начать поиск"@ru ;
  rdfs:label "Press 'Ctrl + Enter' to begin search"@en ;
.

v-fs:AttributiveSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  v-ui:template """
<script>
  var self = individual,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined,
      searchResultTemplate = self.hasValue("v-fs:searchResultTemplate") ? self["v-fs:searchResultTemplate"][0]["v-ui:template"][0].toString() : undefined,
      searchResultContainer = $("#search-result", template);
  if ( searchResultTemplate ) {
    searchResultContainer.append( $(searchResultTemplate) );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  } else {
    $(".stats-top, .stats-bottom, .result-header", template).remove();
    searchResultTemplate = (new veda.IndividualModel("v-fs:MinimalSearchResultTemplate"))["v-ui:template"][0].toString();
    searchResultContainer.append( $(searchResultTemplate) );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  }
  if ( !searchBlankTemplate ) {
    $("#params", template).remove();
  }
  if ( this.hasValue("v-fs:loadAll", true) ) {
    $("#no-more-results", template).remove();
  }

  // Enable swipe for result table
  $("body").keydown(enableSwipe).keyup(disableSwipe);
  template.one("remove", function () {
    $("body").off("keydown", enableSwipe).off("keyup", disableSwipe);
  });
  function disableSwipe (e) {
    if (e.which === 17) {
      $("#search-result", template).addClass("noSwipe").removeClass("swipe");
    }
  }
  function enableSwipe (e) {
    if (e.ctrlKey) {
      $("#search-result", template).addClass("swipe").removeClass("noSwipe");
    }
  }

  var prevDistance = 0, delta = 0;
  $("#search-result", template).swipe({
    swipeStatus: function (event, phase, direction, distance, duration) {
      if (phase === "move" && event.ctrlKey === true) {
        this.css("cursor", "move");
        if (direction === "left") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() + delta );
        } else if (direction === "right") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() - delta );
        } else if (direction === "up") {
          window.scrollBy(0, distance);
        } else if (direction === "down") {
          window.scrollBy(0, -distance);
        }
      } else {
        prevDistance = 0;
        delta = 0;
        this.css("cursor", "");
      }
    }
  });
  template.one("remove", function () {
    prevDistance = null;
    delta = null;
    $("#search-result", template).swipe("destroy");
  });

  //# sourceURL=v-fs:AttributiveSearchTemplate_pre
</script>
<div class="container sheet">
  <style>
    .swipe {
      cursor: move;
    }
  </style>
  <div id="params" class="clearfix">
    <br>
    <div class="ribbon-wrapper top-left">
      <div class="ribbon top-left primary" about="v-fs:SearchBundle" property="rdfs:label"></div>
    </div>
    <button class="btn btn-primary search-button pull-right" about="v-fs:Find" property="rdfs:label"></button>
    <div id="search-form"></div>
    <br>
    <br>
    <button class="btn btn-primary search-button" about="v-fs:Find" property="rdfs:label"></button>
    <!--button class="btn btn-link clear-button" about="v-s:Clear" property="rdfs:label"></button-->
    <button class="btn btn-default xls"><span about="v-fs:Excel" property="rdfs:label"></span></button>
    <button class="btn btn-default files"><span about="v-fs:FilesRegistry" property="rdfs:label"></span></button>
    <span class="text-muted padding-lg" about="v-fs:CtrlEnterBundle" property="rdfs:label"></span>

    <div class="dropup pull-right set-columns-wrapper">
      <button type="button" class="btn btn-info set-columns" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <span about="v-fs:SetColumns" property="rdfs:label"></span>
        <span class="caret"></span>
      </button>
      <div class="dropdown-menu" style="padding:15px;">
        <div class="checkbox">
          <label>
            <input class="column-check" type="checkbox" checked="true"> <span class="column-name"></span>
          </label>
        </div>
      </div>
    </div>

    <br>
  </div>
  <div id="results" class="hidden">
    <div class="result-header">
      <hr>
      <h3 class="clearfix">
        <span class="pull-left" about="v-fs:Results" property="rdfs:label"></span>
        <small class="stats-top pull-right" style="color:black">
          <span about="v-fs:TotalFoundBundle" property="rdfs:label"></span>
          <span class="total-found badge">0</span>&nbsp;&nbsp;
          <span about="v-fs:TotalProcessedBundle" property="rdfs:label"></span>
          <span class="total-processed badge">0</span>&nbsp;&nbsp;
          <strong about="v-fs:TotalAuthorizedBundle" property="rdfs:label"></strong>
          <span class="total-authorized badge">0</span>&nbsp;&nbsp;
        </small>
      </h3>
    </div>
    <div id="search-result" class="search-result table-responsive noSwipe"></div>
    <div class="stats-bottom text-right margin-md">
      <span about="v-fs:TotalFoundBundle" property="rdfs:label"></span>
      <span class="total-found badge">0</span>&nbsp;&nbsp;
      <span about="v-fs:TotalProcessedBundle" property="rdfs:label"></span>
      <span class="total-processed badge">0</span>&nbsp;&nbsp;
      <strong about="v-fs:TotalAuthorizedBundle" property="rdfs:label"></strong>
      <span class="total-authorized badge">0</span>&nbsp;&nbsp;
    </div>
    <div class="not-found alert alert-warning hidden">
      <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
    </div>
    <div id="no-more-results" class="alert alert-success hidden">
      <strong about="v-fs:NoMoreResults" property="rdfs:label"></strong>
    </div>
    <div class="text-center">
      <button id="more-results" class="btn btn-primary hidden" about="v-fs:MoreResults" property="rdfs:label"></button>
      <button id="all-results" class="btn btn-warning hidden" about="v-fs:AllResults" property="rdfs:label"></button>
    </div>
  </div>
</div>
<script>
  var self = individual,
      searchBlankContainer = $("#search-form", template),
      searchResultContainer = $("#search-result", template),
      searchButton = $(".search-button", template),
      clearButton = $(".clear-button", template),
      moreResults = $("#more-results", template),
      allResults = $("#all-results", template),
      noMoreResults = $("#no-more-results", template),
      searchBlank = self.hasValue("v-fs:searchBlank") ? self["v-fs:searchBlank"][0] : undefined ,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined ,
      resultContainer = $(".result-container", template),
      resultTemplate = individual.resultTemplate,
      notFound = $(".not-found", template),
      totalFound = $(".total-found", template),
      totalProcessed = $(".total-processed", template),
      totalAuthorized = $(".total-authorized", template),
      statsTop = $(".stats-top", template),
      statsBottom = $(".stats-bottom", template);

  self.cursor = self.cursor || 0;
  self.top = veda.user.displayedElements || 10;
  self.limit = self.limit || 1000;
  self.estimated = self.estimated || 0;
  self.result = self.result || [];
  self.scroll = self.scroll || 0;

  // Set columns
  individual.hiddenColumns = individual.hiddenColumns || {};
  var checksContainer = $(".set-columns-wrapper .dropdown-menu", template).on('click', function (e) {
    e.stopPropagation();
  });
  var checkTmpl = $(".set-columns-wrapper .dropdown-menu .checkbox", template).remove().get(0).outerHTML;
  $("#search-result table > thead > tr:last > th", template).each(function (index) {
    var th = $(this);
    var check = $(checkTmpl);
    var checkbox = $("input", check);
    var columnName = $(this).find("span").clone();
    if ( columnName.length ) {
      $(".column-name", check).append(columnName);
    } else {
      $(".column-name", check).text( th.text() );
    }
    if (index in individual.hiddenColumns) {
      checkbox.prop("checked", false);
    } else {
      checkbox.prop("checked", true);
    }
    checkbox.change(checkHandler);
    checkHandler.call( checkbox.get(0) );
    checksContainer.append(check);

    // Show/hide result table columns & update resultTemplate accordingly
    function checkHandler() {
      if ( $(this).is(":checked") ) {
        th.removeClass("hidden");
        $("tr td:nth-child(" + (index + 1) + ")", resultContainer).removeClass("hidden");
        resultTemplate = $(resultTemplate);
        resultTemplate.children().eq(index).removeClass("hidden");
        resultTemplate = resultTemplate.get(0).outerHTML;
        delete individual.hiddenColumns[index];
      } else {
        th.addClass("hidden");
        $("tr td:nth-child(" + (index + 1) + ")", resultContainer).addClass("hidden");
        resultTemplate = $(resultTemplate);
        resultTemplate.children().eq(index).addClass("hidden");
        resultTemplate = resultTemplate.get(0).outerHTML;
        individual.hiddenColumns[index] = true;
      }
    }
  });

  // Render search form
  if ( searchBlank ) {
    searchBlank._init();
    searchBlank.object.present(searchBlankContainer, searchBlankTemplate, "search");
    searchBlank.object.on("search", formHandler);
    template.one("remove", function () {
      searchBlank.object.off("search", formHandler);
    });
  } else {
    $("#params", template).remove();
  }
  function formHandler () {
    self.top = veda.user.displayedElements || 10;
    search();
  }

  // Show results on load if they are available (e.g. if we came back)
  if ( self.result.length && location.hash.indexOf(self.id) >= 0 ) {
    renderResult(self.result).then(function () {
      scrollTo(self.scroll);
    });
  // Search on load
  } else if ( individual.hasValue("v-fs:searchOnLoad", true) ) {
    search().then(function () {
      if (location.hash.indexOf(self.id) >= 0) {
        scrollTo( $("#results", template).offset().top );
      }
    });
  }

  // Remember scroll position
  template.one("remove", function () {
    self.scroll = $(window).scrollTop();
  });

  // Search button handler
  searchButton.click(function () {
    var $this = $(this);
    // Reset top
    self.top = veda.user.displayedElements || 10;
    toggleSpin($this);
    search().then(function () {
      scrollTo( $("#results", template).offset().top );
      toggleSpin($this);
    });
  });

  function ctrlEnterHandler (e) {
    if (e.ctrlKey && e.keyCode === 13) {
      self.top = veda.user.displayedElements || 10;
      search().then(function () {
        scrollTo( $("#results", template).offset().top );
      });
    }
// Очистка поисковой формы по клавишам Ctrl+Delete
    if (e.ctrlKey && e.keyCode === 46) {
      var obj = searchBlank.object;
      Object.keys(obj.properties).map(function (property_uri) {
        if (property_uri === "@" || property_uri === "rdf:type") {
          return;
        }
        obj.set(property_uri, []);
      });
    }
  }

  $(window).on("keyup", ctrlEnterHandler);
  template.one("remove", function () {
    $(window).off("keyup", ctrlEnterHandler);
  });

  function ctrlDelHandler (e) { }

  // Clear button handler
  clearButton.click(function () {
    var obj = searchBlank.object;
    Object.keys(obj.properties).map(function (property_uri) {
      if (property_uri === "@" || property_uri === "rdf:type") {
        return;
      }
      obj.set(property_uri, []);
    });
  });

  // More results button handler
  moreResults.click(function () {
    var $this = $(this);
    toggleSpin($this);
    search(self.cursor).then(function () {
      toggleSpin($this);
    });
  });

  // All results button handler
  allResults.click(function () {
    var warn = new veda.IndividualModel("v-s:AreYouSure")["rdfs:label"].join(" ");
    if ( self.estimated - self.cursor < 100 || confirm(warn) ) {
      loadAll();
    }
  });
  function loadAll() {
    if (self.cursor < self.estimated && template.is(":visible")) {
      search(self.cursor).then(loadAll);
    }
  }

  // Auto load more results when page bottom reached
/*  $(window).on("scroll", reachedBottom);
  template.one("remove", function () {
    $(window).off("scroll", reachedBottom);
  });
  function reachedBottom() {
    if( $(window).scrollTop() + $(window).height() === $(document).height() && moreResults.is(":visible") ) {
      moreResults.click();
    }
  }*/

  // Double click on result table row routes to search result
  $("#search-result", template).on("dblclick", "tbody tr", function () {
    var uri = $(this).attr("resource");
    riot.route("#/" + uri);
  });

  // Manage sort
  var sortBy = "", dir = "";
  if ( !self.hasValue("v-fs:sortOrder") ) {
    self["v-fs:sortOrder"] = ["'v-s:created' desc"];
  }
  var tmp = self["v-fs:sortOrder"][0].split(" ");
  sortBy = tmp[0]; dir = tmp[1];
  $(".orderby", template).each( function () {
    var header = $(this);
    var a = $("<a class='text-muted glyphicon glyphicon-sort-by-attributes'></a>");
    header.prepend(a, " ");
    var property_uri = header.attr("data-orderby");
    if (sortBy.indexOf(property_uri) >= 0) {
      a.removeClass("text-muted");
      if (dir === "desc") { a.removeClass("glyphicon-sort-by-attributes").addClass("glyphicon-sort-by-attributes-alt"); }
    }
    a.click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      $(".orderby a", template).addClass("text-muted");
      var dir = $this.hasClass("glyphicon-sort-by-attributes-alt") ? " asc" : " desc";
      $this.removeClass("text-muted").toggleClass("glyphicon-sort-by-attributes glyphicon-sort-by-attributes-alt");
      self["v-fs:sortOrder"] = [ "'" + property_uri + "'" + dir + " , " + "'" + property_uri + "_" + Object.keys(veda.user.language)[0].toLowerCase() + "'" + dir ];
      toggleSpin($this);
      search().then(function () {
        scrollTo( $("#results", template).offset().top );
        toggleSpin($this);
      });
    });
  });

  // Render result
  function renderResult(resultDelta) {

    // Stats
    if (self.result.length < 5) {
      statsBottom.hide();
    } else {
      statsBottom.show();
    }
    totalFound.text(self.estimated || 0);
    totalProcessed.text(self.cursor || 0);
    totalAuthorized.text(self.result.length || 0);
    $("#results", template).removeClass("hidden");

    // Toggle "more results" button & "no more results" alert
    if (self.cursor === self.estimated) {
      moreResults.addClass("hidden");
      allResults.addClass("hidden");
      noMoreResults.removeClass("hidden");
    } else {
      moreResults.removeClass("hidden");
      allResults.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }
    // Toggle "not found" alert & "no more results" alert
    if (self.result.length) {
      notFound.addClass("hidden");
    } else {
      notFound.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }

    // Prefetch new search results alltogether
    var prefetch = [];
    resultDelta.map(function (uri) {
      if ( !veda.cache[uri] ) {
        prefetch.push( uri );
      }
    });
    return get_individuals({
      ticket: veda.ticket,
      uris: prefetch,
      async: true
    }).then(function (prefetched) {
      prefetched.map(function (json) {
        var fetched = new veda.IndividualModel(json);
      });

      var total = self.result.length;
      var delta = resultDelta.length;
      // Render each result
      resultDelta.map(function (uri, i) {
        var tmpl = $(resultTemplate.replace("###", total - delta + i + 1)).hide(),
            item = new veda.IndividualModel(uri);
        item.present(resultContainer, tmpl);
        if (item.id === self.marked) {
          tmpl.addClass("warning");
        }
        setTimeout(function () {
          $("td:not([data-template='v-ui:FileMinTemplate'])", tmpl).each( function () {
            var text = getText(this);
            if (text && text.length > 200) {
              this.textContent = text.substring(0, 200) + "...";
            }
          });
          tmpl.show();
        }, 300);
      });
    });

  }

  function getText(node) {
    if (node.childNodes && node.childNodes.length) {
      return [].map.call(node.childNodes, getText).join(" ");
    } else {
      return node.nodeValue;
    }
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled").removeAttr("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled").attr("disabled", "disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  // Scroll to position
  function scrollTo(position) {
    $("html, body").animate({
      scrollTop: position
    });
  }

  // Mark clicked row
  $(".search-result table", template).on("click", "tbody tr", function () {
    var that = $(this);
    that.siblings(".warning").removeClass("warning");
    that.addClass("warning");
    self.marked = that.attr("resource");
  });

  // Search
  function search(cursor) {
    if (cursor > 0) {
      self.cursor = cursor;
    } else {
      self.cursor = 0;
      self.result = [];
      resultContainer.empty();
    }
    var sort = self.hasValue("v-fs:sortOrder") ? self["v-fs:sortOrder"][0] : undefined;
    var queryString = [];
    if ( searchBlank ) { queryString.push( veda.Util.queryFromIndividual(searchBlank.object) ) }
    if ( self.hasValue("v-fs:fulltextQuery") ) { queryString.push( self["v-fs:fulltextQuery"][0] ) }
    queryString = queryString.join(" && ");
    if ( queryString ) {
      return query({
        ticket: veda.ticket,
        query: queryString,
        sort: sort,
        top: self.top,
        limit: self.limit,
        from: self.cursor,
        async: true
      }).then(function (results) {
        self.result = self.result.concat(results.result);
        self.estimated = results.estimated;
        self.cursor = results.cursor;
        if (self.cursor === self.estimated) {
          // Set top to results length to allow sorting of the whole list
          self.top = self.result.length;
        }
        renderResult(results.result);
      }).then(function () {
        if ( self.hasValue("v-fs:loadAll", true) && self.cursor < self.estimated ) {
          search(self.cursor);
        }
      });
    } else {
      return Promise.resolve(self.result);
    }
  }

  // Export to Spreadsheet
  var tableToExcel = (function () {
    var uri = 'data:application/vnd.ms-excel;base64,'
      , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
      , format = function(s, c) { return s.replace(/{([a-z]+)}/g, function(m, p) { return c[p]; }) }
    return function(table, name) {
      if (!table.nodeType) table = document.getElementById(table);
      var ctx = {
        worksheet: name || 'Worksheet',
        table: table.innerHTML
      };
      var formatted = format(template, ctx);
      var blob = new Blob([formatted], {type: "application/vnd.ms-excel;charset=utf-8"});
      saveAs(blob, name + ".xls");
    }
  })();

  $(".xls", template).click(function (e) {
    e.preventDefault();
    var resultTable = $(".search-result > table").clone();
    resultTable.find(".hidden").remove();
    resultTable = resultTable.get(0);
    tableToExcel(resultTable, self["rdfs:label"].join(", "));
  });

  // Export to FileRegistry
  var tableToBlob = (function () {
    var uri = 'data:text/html;base64,'
      , template = '<html><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table border="1" cellpadding="5" cellspacing="0">{table}</table></body></html>'
      , format = function(s, c) { return s.replace(/{([a-z]+)}/g, function(m, p) { return c[p]; }) }
    return function(table, name) {
      if (!table.nodeType) table = document.getElementById(table);
      var ctx = {
        worksheet: name || 'Worksheet',
        table: table.innerHTML
      };
      var formatted = format(template, ctx);
      var blob = new Blob([formatted], {type: "text/html;charset=utf-8"});
      return blob;
    }
  })();

  $(".files", template).click(function (e) {
    var btn = $(this);
    toggleSpin(btn);
    e.preventDefault();
    var resultTable = $(".search-result > table").clone();
    resultTable.find(".hidden").remove();
    resultTable = resultTable.get(0);

    var filesPromises = $("[typeof='v-s:File']", resultTable).map(function () {
      var $this = $(this);
      var fileUri = $this.attr("resource").replace(":", "_");
      var fileName = $("span", $this).text().replace(/([a-zA-Z0-9]+)$/, fileUri + ".$1");
      var localFileUrl = "./files/" + fileName;
      var link = $("a", $this);
      var fileUrl = link.attr("href");
      link.attr("href", localFileUrl);
      return filePromise(fileUrl, fileName);
    });

    Promise.all(filesPromises).then(function (files) {
      var zip = new JSZip();
      var registry = tableToBlob(resultTable, self["rdfs:label"].join(", "));
      zip.file("registry.html", registry);
      var folder = zip.folder("files");
      files.forEach(function (file) {
        folder.file(file.name, file);
      });
      zip.generateAsync({type:"blob"}).then(function(content) {
        saveAs(content, "registry.zip");
        toggleSpin(btn);
      });
    }).catch(function (error) {
      console.log(error, error.stack);
      toggleSpin(btn);
      var notify = new veda.Notify();
      notify("danger", { message: "Ошибка выгрузки реестра. Обратитесь в поддержку." });
    });
  });

  function filePromise(url, name) {
    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url + "?" + Math.random(), true);
      xhr.responseType = 'blob';
      xhr.onload = function(e) {
        if (this.status == 200) {
          var file = new Blob([this.response], {type: 'application/octet-stream'});
          file.name = name;
          resolve(file);
        } else {
          reject(xhr.statusText);
        }
      };
      xhr.onerror = function () {
        reject(xhr.statusText);
      }
      xhr.send();
    });
  }

  //# sourceURL=v-fs:AttributiveSearchTemplate_post
</script>
  """ ;
.

v-fs:MinimalSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов минимального поиска"@ru ;
  rdfs:label "Minimal search result template"@en ;
  v-ui:template """
<table class="table table-condensed table-striped">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th>@</th>
      <th class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td>###</td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td property="@"></td>
      <td about="@" property="rdfs:label"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:TestSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Тестовый поиск"@ru ;
  rdfs:label "Test search"@en ;
  v-fs:searchBlank v-fs:TestBlank ;
  v-fs:searchBlankTemplate v-fs:TestBlankTemplate ;
  v-fs:searchResultTemplate v-fs:TestResultTemplate ;
  v-fs:fulltextQuery "('rdf:type'=='v-s:Person')" ;
  v-fs:sortOrder "'rdfs:label' asc" ;
.

v-fs:TestBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType v-s:Person ;
  v-s:firstName "Роман" ;
  v-s:lastName "Карпов" ;
  v-s:middleName "Константинович" ;
.

v-fs:TestBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка поиска персоны"@ru ;
  rdfs:label "Person search blank template"@en ;
  v-ui:template """
<div class="row">
  <div class="col-md-3">
    <em about="v-s:lastName" property="rdfs:label">Фамилия</em>
    <veda-control property="v-s:lastName" data-type="string"></veda-control>
    <div property="v-s:lastName"></div>
  </div>
  <div class="col-md-3">
    <em about="v-s:firstName" property="rdfs:label">Имя</em>
    <veda-control property="v-s:firstName" data-type="string"></veda-control>
    <div property="v-s:firstName"></div>
  </div>
  <div class="col-md-3">
    <em about="v-s:middleName" property="rdfs:label">Отчество</em>
    <veda-control property="v-s:middleName" data-type="string"></veda-control>
    <div property="v-s:middleName"></div>
  </div>
  <div class="col-md-3">
    <em about="v-s:birthday" property="rdfs:label">День рождения</em>
    <veda-control property="v-s:birthday" data-type="dateTime"></veda-control>
    <div property="v-s:birthday"></div>
  </div>
</div>
  """ ;
.

v-fs:TestResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов поиска персоны"@ru ;
  rdfs:label "Person search result template"@en ;
  v-ui:template """
<table class="table table-bordered">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th width="30%" class="orderby" data-orderby="v-s:lastName"><span about="v-s:lastName" property="rdfs:label"></span></th>
      <th width="30%" class="orderby" data-orderby="v-s:firstName"><span about="v-s:firstName" property="rdfs:label"></span></th>
      <th width="30%" class="orderby" data-orderby="v-s:middleName"><span about="v-s:middleName" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td>###</td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td property="v-s:lastName"></td>
      <td property="v-s:firstName"></td>
      <td property="v-s:middleName"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:FulltextSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Полнотекстовый поиск"@ru ;
  rdfs:label "Fulltext search"@en ;
  v-fs:searchBlank v-fs:FulltextBlank ;
  v-fs:searchBlankTemplate v-fs:FulltextBlankTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
.

v-fs:FulltextBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
#  v-fc:targetType v-s:UserThing ;
.

v-fs:FulltextBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка поиска персоны"@ru ;
  rdfs:label "Person search blank template"@en ;
  v-ui:template """
<div class="row">
  <div class="col-md-12">
    <h3 about="v-fs:EnterQuery" property="rdfs:label"></h3>
    <veda-control property="*" data-type="string"></veda-control>
  </div>
</div>
<script>
  container.siblings(".search-button.pull-right").remove();
  $("input", template).keydown(function (e) {
    if (e.which === 13) {
      var value = this.value;
      individual.set("*", [value]);
      container.siblings(".search-button").click();
    }
  });
  //# sourceURL=v-fs:FulltextBlankTemplate_post
</script>
  """ ;
.

v-fs:FulltextResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search result template"@en ;
  v-ui:template """
<table class="table table-bordered table-condensed">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th width="5%" class="orderby" data-orderby="rdf:type"><span about="rdf:type" property="rdfs:label"></span></th>
      <th width="30%" class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
      <th width="5%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
      <th width="5%" class="orderby" data-orderby="v-s:creator"><span about="v-s:creator" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td>###</td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></td>
      <td about="@" property="rdfs:label"></td>
      <td about="@" property="v-s:created"></td>
      <td about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:MinimalSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Минимальный поиск"@ru ;
  rdfs:label "Minimal search"@en ;
  v-fs:searchBlank v-fs:MinimalSearchBlank ;
  v-fs:searchOnLoad true ;
  v-fs:loadAll true ;
.

v-fs:MinimalSearchBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType rdf:Property ;
.

v-fs:AttributiveSearchInlineTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  v-ui:template """
<script>
  var self = individual,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined,
      searchResultTemplate = self.hasValue("v-fs:searchResultTemplate") ? self["v-fs:searchResultTemplate"][0]["v-ui:template"][0].toString() : undefined,
      searchResultContainer = $("#search-result", template);
  if ( searchResultTemplate ) {
    searchResultContainer.append( $(searchResultTemplate) );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  } else {
    $(".stats-top, .stats-bottom, .result-header", template).remove();
    searchResultTemplate = (new veda.IndividualModel("v-fs:MinimalSearchResultTemplate"))["v-ui:template"][0].toString();
    searchResultContainer.append( $(searchResultTemplate) );
    var resultContainer = $(".result-container", template);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
  }
  if ( !searchBlankTemplate ) {
    $("#params", template).remove();
  }
  if ( this.hasValue("v-fs:loadAll", true) ) {
    $("#no-more-results", template).remove();
  }

  // Enable swipe for result table
  $("body").keydown(enableSwipe).keyup(disableSwipe);
  template.one("remove", function () {
    $("body").off("keydown", enableSwipe).off("keyup", disableSwipe);
  });
  function disableSwipe (e) {
    if (e.which === 17) {
      $("#search-result", template).addClass("noSwipe").removeClass("swipe");
    }
  }
  function enableSwipe (e) {
    if (e.ctrlKey) {
      $("#search-result", template).addClass("swipe").removeClass("noSwipe");
    }
  }

  var prevDistance = 0, delta = 0;
  $("#search-result", template).swipe({
    swipeStatus: function (event, phase, direction, distance, duration) {
      if (phase === "move" && event.ctrlKey === true) {
        this.css("cursor", "move");
        if (direction === "left") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() + delta );
        } else if (direction === "right") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() - delta );
        } else if (direction === "up") {
          window.scrollBy(0, distance);
        } else if (direction === "down") {
          window.scrollBy(0, -distance);
        }
      } else {
        prevDistance = 0;
        delta = 0;
        this.css("cursor", "");
      }
    }
  });
  template.one("remove", function () {
    prevDistance = null;
    delta = null;
    $("#search-result", template).swipe("destroy");
  });

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_pre
</script>
<div>
  <style>
    .swipe {
      cursor: move;
    }
  </style>
  <div id="params">
    <button class="btn btn-primary search-button pull-right" about="v-fs:Find" property="rdfs:label"></button>
    <div id="search-form"></div>
    <br>
    <button class="btn btn-primary search-button" about="v-fs:Find" property="rdfs:label"></button>
    <!--button class="btn btn-link clear-button" about="v-s:Clear" property="rdfs:label"></button-->
    <br>
  </div>
  <div id="results" class="hidden">
    <div class="result-header">
      <h3 class="clearfix">
        <span class="pull-left" about="v-fs:Results" property="rdfs:label"></span>
        <small class="stats-top pull-right" style="color:black">
          <span about="v-fs:TotalFoundBundle" property="rdfs:label"></span>
          <span class="total-found badge">0</span>&nbsp;&nbsp;
          <span about="v-fs:TotalProcessedBundle" property="rdfs:label"></span>
          <span class="total-processed badge">0</span>&nbsp;&nbsp;
          <strong about="v-fs:TotalAuthorizedBundle" property="rdfs:label"></strong>
          <span class="total-authorized badge">0</span>&nbsp;&nbsp;
        </small>
      </h3>
    </div>
    <div id="search-result" class="search-result table-responsive noSwipe"></div>
    <div class="not-found alert alert-warning hidden">
      <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
    </div>
    <div id="no-more-results" class="alert alert-success hidden">
      <strong about="v-fs:NoMoreResults" property="rdfs:label"></strong>
    </div>
    <div class="text-center">
      <button id="more-results" class="btn btn-primary hidden" about="v-fs:MoreResults" property="rdfs:label"></button>
      <button id="all-results" class="btn btn-warning hidden" about="v-fs:AllResults" property="rdfs:label"></button>
    </div>
  </div>
</div>
<script>
  var self = individual,
      searchBlankContainer = $("#search-form", template),
      searchResultContainer = $("#search-result", template),
      searchButton = $(".search-button", template),
      clearButton = $(".clear-button", template),
      moreResults = $("#more-results", template),
      allResults = $("#all-results", template),
      noMoreResults = $("#no-more-results", template),
      searchBlank = self.hasValue("v-fs:searchBlank") ? self["v-fs:searchBlank"][0] : undefined ,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined ,
      resultContainer = $(".result-container", template),
      resultTemplate = individual.resultTemplate,
      notFound = $(".not-found", template),
      totalFound = $(".total-found", template),
      totalProcessed = $(".total-processed", template),
      totalAuthorized = $(".total-authorized", template),
      statsTop = $(".stats-top", template),
      statsBottom = $(".stats-bottom", template);

  self.cursor = self.cursor || 0;
  self.top = veda.user.displayedElements || 10;
  self.limit = self.limit || 1000;
  self.estimated = self.estimated || 0;
  self.result = self.result || [];
  self.scroll = self.scroll || 0;

  // Render search form
  if ( searchBlank ) {
    searchBlank._init();
    searchBlank.object.present(searchBlankContainer, searchBlankTemplate, "search");
    searchBlank.object.on("search", formHandler);
    template.one("remove", function () {
      searchBlank.object.off("search", formHandler);
    });
  } else {
    $("#params", template).remove();
  }
  function formHandler () {
    self.top = veda.user.displayedElements || 10;
    search();
  }

  // Show results on load if they are available (e.g. if we came back)
  if ( self.result.length && location.hash.indexOf(self.id) >= 0 ) {
    renderResult(self.result).then(function () {
      scrollTo(self.scroll);
    });
  // Search on load
  } else if ( individual.hasValue("v-fs:searchOnLoad", true) ) {
    search().then(function () {
      if (location.hash.indexOf(self.id) >= 0) {
        scrollTo( $("#results", template).offset().top );
      }
    });
  }

  // Remember scroll position
  template.one("remove", function () {
    self.scroll = $(window).scrollTop();
  });

  // Search button handler
  searchButton.click(function () {
    var $this = $(this);
    // Reset top
    self.top = veda.user.displayedElements || 10;
    toggleSpin($this);
    search().then(function () {
      scrollTo( $("#results", template).offset().top );
      toggleSpin($this);
    });
  });

  function ctrlEnterHandler (e) {
    if (e.ctrlKey && e.keyCode === 13) {
      self.top = veda.user.displayedElements || 10;
      search().then(function () {
        scrollTo( $("#results", template).offset().top );
      });
    }
// Очистка поисковой формы по клавишам Ctrl+Delete
    if (e.ctrlKey && e.keyCode === 46) {
      var obj = searchBlank.object;
      Object.keys(obj.properties).map(function (property_uri) {
        if (property_uri === "@" || property_uri === "rdf:type") {
          return;
        }
        obj.set(property_uri, []);
      });
    }
  }

  $(window).on("keyup", ctrlEnterHandler);
  template.one("remove", function () {
    $(window).off("keyup", ctrlEnterHandler);
  });

  function ctrlDelHandler (e) { }

  // Clear button handler
  clearButton.click(function () {
    var obj = searchBlank.object;
    Object.keys(obj.properties).map(function (property_uri) {
      if (property_uri === "@" || property_uri === "rdf:type") {
        return;
      }
      obj.set(property_uri, []);
    });
  });

  // More results button handler
  moreResults.click(function () {
    var $this = $(this);
    toggleSpin($this);
    search(self.cursor).then(function () {
      toggleSpin($this);
    });
  });

  // All results button handler
  allResults.click(function () {
    var warn = new veda.IndividualModel("v-s:AreYouSure")["rdfs:label"].join(" ");
    if ( self.estimated - self.cursor < 100 || confirm(warn) ) {
      loadAll();
    }
  });
  function loadAll() {
    if (self.cursor < self.estimated && template.is(":visible")) {
      search(self.cursor).then(loadAll);
    }
  }

  // Auto load more results when page bottom reached
/*  $(window).on("scroll", reachedBottom);
  template.one("remove", function () {
    $(window).off("scroll", reachedBottom);
  });
  function reachedBottom() {
    if( $(window).scrollTop() + $(window).height() === $(document).height() && moreResults.is(":visible") ) {
      moreResults.click();
    }
  }*/

  // Double click on result table row routes to search result
  $("#search-result", template).on("dblclick", "tbody tr", function () {
    var uri = $(this).attr("resource");
    riot.route("#/" + uri);
  });

  // Manage sort
  var sortBy = "", dir = "";
  if ( !self.hasValue("v-fs:sortOrder") ) {
    self["v-fs:sortOrder"] = ["'v-s:created' desc"];
  }
  var tmp = self["v-fs:sortOrder"][0].split(" ");
  sortBy = tmp[0]; dir = tmp[1];
  $(".orderby", template).each( function () {
    var header = $(this);
    var a = $("<a class='text-muted glyphicon glyphicon-sort-by-attributes'></a>");
    header.prepend(a, " ");
    var property_uri = header.attr("data-orderby");
    if (sortBy.indexOf(property_uri) >= 0) {
      a.removeClass("text-muted");
      if (dir === "desc") { a.removeClass("glyphicon-sort-by-attributes").addClass("glyphicon-sort-by-attributes-alt"); }
    }
    a.click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      $(".orderby a", template).addClass("text-muted");
      var dir = $this.hasClass("glyphicon-sort-by-attributes-alt") ? " asc" : " desc";
      $this.removeClass("text-muted").toggleClass("glyphicon-sort-by-attributes glyphicon-sort-by-attributes-alt");
      self["v-fs:sortOrder"] = [ "'" + property_uri + "'" + dir + " , " + "'" + property_uri + "_" + Object.keys(veda.user.language)[0].toLowerCase() + "'" + dir ];
      toggleSpin($this);
      search().then(function () {
        scrollTo( $("#results", template).offset().top );
        toggleSpin($this);
      });
    });
  });

  // Render result
  function renderResult(resultDelta) {

    // Stats
    if (self.result.length < 5) {
      statsBottom.hide();
    } else {
      statsBottom.show();
    }
    totalFound.text(self.estimated || 0);
    totalProcessed.text(self.cursor || 0);
    totalAuthorized.text(self.result.length || 0);
    $("#results", template).removeClass("hidden");

    // Toggle "more results" button & "no more results" alert
    if (self.cursor === self.estimated) {
      moreResults.addClass("hidden");
      allResults.addClass("hidden");
      noMoreResults.removeClass("hidden");
    } else {
      moreResults.removeClass("hidden");
      allResults.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }
    // Toggle "not found" alert & "no more results" alert
    if (self.result.length) {
      notFound.addClass("hidden");
    } else {
      notFound.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }

    // Prefetch new search results alltogether
    var prefetch = [];
    resultDelta.map(function (uri) {
      if ( !veda.cache[uri] ) {
        prefetch.push( uri );
      }
    });
    return get_individuals({
      ticket: veda.ticket,
      uris: prefetch,
      async: true
    }).then(function (prefetched) {
      prefetched.map(function (json) {
        var fetched = new veda.IndividualModel(json);
      });

      var total = self.result.length;
      var delta = resultDelta.length;
      // Render each result
      resultDelta.map(function (uri, i) {
        var tmpl = $(resultTemplate.replace("###", total - delta + i + 1)).hide(),
            item = new veda.IndividualModel(uri);
        item.present(resultContainer, tmpl);
        if (item.id === self.marked) {
          tmpl.addClass("warning");
        }
        setTimeout(function () {
          $("td", tmpl).each( function () {
            var text = getText(this);
            if (text && text.length > 200) {
              this.textContent = text.substring(0, 200) + "...";
            }
          });
          tmpl.show();
        }, 300);
      });
    });

  }

  function getText(node) {
    if (node.childNodes && node.childNodes.length) {
      return [].map.call(node.childNodes, getText).join(" ");
    } else {
      return node.nodeValue;
    }
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  // Scroll to position
  function scrollTo(position) {
    $("html, body").animate({
      scrollTop: position
    });
  }

  // Mark clicked row
  $(".search-result table", template).on("click", "tbody tr", function () {
    var that = $(this);
    that.siblings(".warning").removeClass("warning");
    that.addClass("warning");
    self.marked = that.attr("resource");
  });

  // Search
  function search(cursor) {
    if (cursor > 0) {
      self.cursor = cursor;
    } else {
      self.cursor = 0;
      self.result = [];
      resultContainer.empty();
    }
    var sort = self.hasValue("v-fs:sortOrder") ? self["v-fs:sortOrder"][0] : undefined;
    var queryString = [];
    if ( searchBlank ) { queryString.push( veda.Util.queryFromIndividual(searchBlank.object) ) }
    if ( self.hasValue("v-fs:fulltextQuery") ) { queryString.push( self["v-fs:fulltextQuery"][0] ) }
    queryString = queryString.join(" && ");
    if ( queryString ) {
      return query({
        ticket: veda.ticket,
        query: queryString,
        sort: sort,
        top: self.top,
        limit: self.limit,
        from: self.cursor,
        async: true
      }).then(function (results) {
        self.result = self.result.concat(results.result);
        self.estimated = results.estimated;
        self.cursor = results.cursor;
        if (self.cursor === self.estimated) {
          // Set top to results length to allow sorting of the whole list
          self.top = self.result.length;
        }
        renderResult(results.result);
      }).then(function () {
        if ( self.hasValue("v-fs:loadAll", true) && self.cursor < self.estimated ) {
          search(self.cursor);
        }
      });
    } else {
      return Promise.resolve(self.result);
    }
  }

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_post
</script>
  """ ;
.
